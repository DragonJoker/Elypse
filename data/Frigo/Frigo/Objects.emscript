ObjectsInfo g_objectInfos;
ObjectInstance g_selectedObject;
Object g_selectedShoppingObject;
int g_minShoppingList;
int g_shoppingCount;
bool g_shoppingMenuShown;

string g_baseSite;

void SelectObject()
{
	if (g_fridgeContent->Has( g_mouse.PickedObject->GetName()))
	{
		Echo( "SelectObject");
		g_selectedObject := g_fridgeContent->Find( g_mouse.PickedObject->GetName());
		g_selectedShoppingObject = g_selectedObject.InstanceObject;
		g_mouse.ObjectSelected = true;
		Echo( itoa( g_selectedPlayer.FacebookId) + " - " + itoa( g_mainPlayersPlayer.FacebookId));
		g_objectInfos->InitFromObject( g_selectedObject.InstanceObject, (g_selectedPlayer.FacebookId == g_mainPlayersPlayer.FacebookId), false);
	}
}

void EatObject()
{
	string l_result;
	if (g_selectedPlayer.FacebookId == g_mainPlayersPlayer.FacebookId)
	{
		l_result = StringFromUrl( "http://" + g_baseSite + "/take.php?id_object=" + itoa( g_selectedShoppingObject.Id), "");
	}
	else
	{
		l_result = StringFromUrl( "http://" + g_baseSite + "/take.php?target_id=" + itoa( g_selectedPlayer.FacebookId) + "&id_object=" + itoa( g_selectedShoppingObject.Id), "");
	}
	Echo( "EatObject - " + l_result + " - " + itoa( g_selectedShoppingObject.Id));
	if (l_result == "ok")
	{
		FlushFridgeContent();
		g_selectedPlayer->Init( g_selectedPlayer.FacebookId == g_mainPlayersPlayer.FacebookId);
		RefreshFridgeContent();
		g_objectInfos.Overlay->Hide();
	}
	elseif (l_result == "too late")
	{
		ShowMessageBox( "Impossible de consommer" + endl + "cet objet, vous avez" + endl + "deja consomme chez" + endl + "cet ami");
	}
	elseif (l_result == "no item")
	{
		ShowMessageBox( "Impossible de consommer" + endl + "cet objet, il a deja" + endl + "ete consomme");
	}
}

void SelectObjectToBuy( int p_index)
{
	g_selectedOverlay->SetMaterial( "Vignette");
	g_selectedOverlay = OverlayElement_GetByName( "ShoppingMenu/ItemsContainer/Item" + itoa( p_index));
	g_selectedOverlay->SetMaterial( "VignetteSel");
	iterator <int_map <Object> > l_strit;
	l_strit = g_allObjects->Find_Iter( g_minShoppingList + p_index + 1);
	if (l_strit != g_allObjects->End())
	{
		g_selectedShoppingObject = l_strit->Data();
		g_mouse.ObjectSelected = true;
		g_objectInfos->InitFromObject( g_selectedShoppingObject, true, true);
	}
	else
	{
		g_mouse.ObjectSelected = false;
	}
}

bool ShowShoppingObjects( int p_begin, int p_end)
{
//	Echo( "ShowShoppingObjects");
	Timer_Kill( "ShoppingTooltips");
	int i;
	int l_end;
	l_end = p_end;
	if (l_end >= g_allObjects->Size())
	{
		l_end = g_allObjects->Size();
	}
	iterator <int_map <Object> >  l_it;
	l_it = g_allObjects->Begin();
	iterator <int_map <Object> >  l_endit;
	l_endit = g_allObjects->End();
	for (i = 0 ; i < p_begin && l_it != l_endit ; i++)
	{
		l_it++;
	}

	if (l_it == l_endit)
	{
		return false;
	}

	for (i = 0 ; i < g_shoppingCount ; i++)
	{
		OverlayElement_GetByName( "ShoppingMenu/ItemsContainer/Item" + itoa( i) + "/Image")->SetMaterial( "Vignette");
	}
	g_tooltipTexts->Clear();
	Object l_object;
	int l_count;
	l_count = 0;
	StringRealPair l_pair;
	for (i = p_begin ; i < l_end && l_it != l_endit ; i++)
	{
		l_object = l_it->Data();
//		Echo( l_object.Image);
		OverlayElement_GetByName( "ShoppingMenu/ItemsContainer/Item" + itoa( l_count) + "/Image")->SetMaterial( l_object.Image);
		l_pair.First = l_object.Name + endl + itoa( l_object.Price) + "$";
		l_pair.Second = GetLineWidth( l_object.Name, "Minigame", 40.0);
		g_objectFromTooltip->Add( "ShoppingMenu/ItemsContainer/Item" + itoa( l_count), l_object);
		g_tooltipTexts->Add( "ShoppingMenu/ItemsContainer/Item" + itoa( l_count), l_pair);
		l_count++;
		l_it++;
	}
	iterator <string_map <StringRealPair> > l_strit;
	real l_time;
	timer( "ShoppingTooltips", TIMERTYPE_PERMANENT, 0.0)
	{
		g_mouse.X = MOUSE_POSITION_X;
		g_mouse.Y = MOUSE_POSITION_Y;
		g_mouse.PickedOverlay = OverlayElement_MousePickup( g_mouse.X, g_mouse.Y);
		if (g_mouse.PickedOverlay != NULL)
		{
			if (g_mouse.PickedOverlay->GetName()->find( "Shopping") != npos)
			{
				if (g_mouse.PickedOverlay->GetName()->find( "Image") != npos)
				{
					g_mouse.PickedOverlay = g_mouse.PickedOverlay->GetParent();
				}
				l_strit = g_tooltipTexts->Find_Iter( g_mouse.PickedOverlay->GetName());
				if (l_strit != g_tooltipTexts->End())
				{
					if (g_mouse.LastPickedOverlay == g_mouse.PickedOverlay)
					{
						l_time += GENERAL_ELAPSED_TIME;
						if (l_time >= 0.5 && ! l_strit->Data().First->empty())
						{
							g_mouse.Tooltip->SetTop( MOUSE_POSITION_Y);
							g_mouse.Tooltip->SetLeft( MOUSE_POSITION_X);
							g_mouse.Tooltip->SetWidth( l_strit->Data().Second);
							g_mouse.TooltipText->SetWidth( 90.0 * l_strit->Data().Second / 100.0);
							g_mouse.TooltipText->SetCaption( l_strit->Data().First);
							g_mouse.Tooltip->Show();
						}
					}
					else
					{
						g_mouse.LastPickedOverlay = g_mouse.PickedOverlay;
						l_time = 0.0;
						g_mouse.Tooltip->Hide();
					}
				}
				elseif (g_mouse.PickedOverlay != g_mouse.Tooltip && g_mouse.PickedOverlay != g_mouse.TooltipText)
				{
					g_mouse.Tooltip->Hide();
				}
			}
			elseif (g_mouse.PickedOverlay != g_mouse.Tooltip && g_mouse.PickedOverlay != g_mouse.TooltipText)
			{
				g_mouse.Tooltip->Hide();
			}
		}
		else
		{
			g_mouse.Tooltip->Hide();
		}
	}
	return true;
}

void ToggleShoppingMenu()
{
	g_shoppingMenuShown = ( ! g_shoppingMenuShown);
	if (g_shoppingMenuShown)
	{
		g_minShoppingList = 0;
		ShowShoppingObjects( g_minShoppingList, g_minShoppingList + g_shoppingCount);
		Overlay_Show( "ShoppingMenu");
		Overlay_Hide( "ShoppingButton");
	}
	else
	{
		Timer_Kill( "ShoppingTooltips");
		Overlay_Hide( "ShoppingMenu");
		Overlay_Show( "ShoppingButton");
	}
}

void BuyObject()
{
	if (g_mouse.ObjectSelected)
	{
		string l_result;
		l_result = StringFromUrl( "http://" + g_baseSite + "/shop.php?id_object=" + itoa( g_selectedShoppingObject.Id), "");
		Echo( "BuyObject - " + l_result + " - " + itoa( g_selectedShoppingObject.Id));
		if (l_result == "ok")
		{
			ToggleShoppingMenu();
			FlushFridgeContent();
			g_selectedPlayer->Init( g_selectedPlayer.FacebookId == g_mainPlayersPlayer.FacebookId);
			RefreshFridgeContent();
		}
		elseif (l_result == "no money")
		{
			ShowMessageBox( "Impossible d'acheter" + endl + "cet objet, pas assez" + endl + "d'argent");
		}
		elseif (l_result == "too much")
		{
			ShowMessageBox( "Impossible d'acheter" + endl + "cet objet, frigo plein");
		}
	}
}