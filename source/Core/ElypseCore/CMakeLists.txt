project( ElypseCore )

set( ${PROJECT_NAME}_VERSION_MAJOR	0 )
set( ${PROJECT_NAME}_VERSION_MINOR	9 )
set( ${PROJECT_NAME}_VERSION_BUILD	4 )

if ( NOT WIN32 )
	find_package( Atkmm )
	find_package( GTKmm )
	find_package( GDKmm )
	find_package( Glibmm )
	find_package( GIOmm )
	find_package( Cairomm )
	find_package( Pangomm )
	find_package( SigC++ )
	find_package( GStreamer )
	find_package( LibXml )
else()
	find_package( DSHOW )
endif ( NOT WIN32 )

if ( NOT WIN32 )
	include_directories( ${FREETYPE_INCLUDE_DIRS} )
	include_directories( ${Atkmm_INCLUDE_DIRS} )
	include_directories( ${GTKmm_INCLUDE_DIRS} ) 
	include_directories( ${GDKmm_INCLUDE_DIRS} )
	include_directories( ${Glibmm_INCLUDE_DIRS} )
	include_directories( ${GIOmm_INCLUDE_DIRS} )
	include_directories( ${Cairomm_INCLUDE_DIRS} )
	include_directories( ${Pangomm_INCLUDE_DIRS} )
	include_directories( ${SigC++_INCLUDE_DIRS} )
	include_directories( ${GSTREAMER_INCLUDE_DIR} )
	include_directories( ${LIBXML_INCLUDE_DIRS} )
else ()
	if ( DSHOW_FOUND )
		message( STATUS "+ Found DirectShow" )
		include_directories( ${DSHOW_INCLUDE_DIRS} )
	endif ()
endif ( NOT WIN32 )

include_directories( ${CMAKE_SOURCE_DIR}/Core/GeneralLib/Src )

set( GtkmmLibraries "")
FOREACH( Lib ${SigC++_LIBRARY} )
	if ( GtkmmLibraries )
		set( GtkmmLibraries "${GtkmmLibraries}|${Lib}" )
	else()
		set( GtkmmLibraries "${Lib}" )
	endif()
ENDFOREACH()
FOREACH(Lib ${Atkmm_LIBRARY})
	if (GtkmmLibraries)
		set(GtkmmLibraries "${GtkmmLibraries}|${Lib}")
	else()
		set(GtkmmLibraries "${Lib}")
	endif()
ENDFOREACH()
FOREACH(Lib ${Pangomm_LIBRARY})
	if (GtkmmLibraries)
		set(GtkmmLibraries "${GtkmmLibraries}|${Lib}")
	else()
		set(GtkmmLibraries "${Lib}")
	endif()
ENDFOREACH()
FOREACH(Lib ${FREETYPE_LIBRARY})
	if (GtkmmLibraries)
		set(GtkmmLibraries "${GtkmmLibraries}|${Lib}")
	else()
		set(GtkmmLibraries "${Lib}")
	endif()
ENDFOREACH()
FOREACH(Lib ${Cairomm_LIBRARY})
	if (GtkmmLibraries)
		set(GtkmmLibraries "${GtkmmLibraries}|${Lib}")
	else()
		set(GtkmmLibraries "${Lib}")
	endif()
ENDFOREACH()
FOREACH(Lib ${GTKmm_LIBRARY})
	if (GtkmmLibraries)
		set(GtkmmLibraries "${GtkmmLibraries}|${Lib}")
	else()
		set(GtkmmLibraries "${Lib}")
	endif()
ENDFOREACH()
FOREACH(Lib ${GDKmm_LIBRARY})
	if (GtkmmLibraries)
		set(GtkmmLibraries "${GtkmmLibraries}|${Lib}")
	else()
		set(GtkmmLibraries "${Lib}")
	endif()
ENDFOREACH()
FOREACH(Lib ${Glibmm_LIBRARY})
	if (GtkmmLibraries)
		set(GtkmmLibraries "${GtkmmLibraries}|${Lib}")
	else()
		set(GtkmmLibraries "${Lib}")
	endif()
ENDFOREACH()
FOREACH(Lib ${GIOmm_LIBRARY})
	if (GtkmmLibraries)
		set(GtkmmLibraries "${GtkmmLibraries}|${Lib}")
	else()
		set(GtkmmLibraries "${Lib}")
	endif()
ENDFOREACH()

set( XmlLibraries "")
FOREACH(Lib ${LIBXML_LIBRARY_DIR})
	if (XmlLibraries)
		set(XmlLibraries "${XmlLibraries}|${Lib}")
	else()
		set(XmlLibraries "${Lib}")
	endif()
ENDFOREACH()

set( GstLibraries "")
FOREACH(Lib ${GSTREAMER_LIBRARIES})
	if (GstLibraries)
		set(GstLibraries "${GstLibraries}|${Lib}")
	else()
		set(GstLibraries "${Lib}")
	endif()
ENDFOREACH()

set( DShowLibraries "")
FOREACH(Lib ${DSHOW_LIBRARIES})
	if (DShowLibraries)
		set(DShowLibraries "${DShowLibraries}|${Lib}")
	else()
		set(DShowLibraries "${Lib}")
	endif()
ENDFOREACH()

set( ExternalLibs
	${GtkmmLibraries}
	${XmlLibraries}
	${GstLibraries}
	${DShowLibraries}
)

add_target(
	${PROJECT_NAME}
	api_dll
	"GeneralLib"
	"GeneralLib;${ElypseCoreLibraries};${ExternalLibs}"
	"PrecompiledHeader.h"
	"PrecompiledHeader.cpp"
)
	
set_property( TARGET ${PROJECT_NAME} PROPERTY FOLDER "Core" )
set( Build "yes (version ${${PROJECT_NAME}_VERSION_MAJOR}.${${PROJECT_NAME}_VERSION_MINOR}.${${PROJECT_NAME}_VERSION_BUILD})" PARENT_SCOPE )
add_target_astyle( ${PROJECT_NAME} ".h;.hpp;.inl;.cpp" )

copy_dll( ${PROJECT_NAME} "${Boost_DATE_TIME_LIBRARY_DEBUG}" Debug )
copy_dll( ${PROJECT_NAME} "${Boost_DATE_TIME_LIBRARY_RELEASE}" Release )
copy_dll( ${PROJECT_NAME} "${Boost_FILESYSTEM_LIBRARY_DEBUG}" Debug )
copy_dll( ${PROJECT_NAME} "${Boost_FILESYSTEM_LIBRARY_RELEASE}" Release )
copy_dll( ${PROJECT_NAME} "${Boost_SYSTEM_LIBRARY_DEBUG}" Debug )
copy_dll( ${PROJECT_NAME} "${Boost_SYSTEM_LIBRARY_RELEASE}" Release )
copy_dll( ${PROJECT_NAME} "${Fmod_LIBRARY_DIR}/../fmodex.dll" Debug )
copy_dll( ${PROJECT_NAME} "${Fmod_LIBRARY_DIR}/../fmodex.dll" Release )
copy_dll( ${PROJECT_NAME} "${Ogre_ROOT_DIR}/bin/Debug/OgreMain_d.dll" Debug )
copy_dll( ${PROJECT_NAME} "${Ogre_ROOT_DIR}/bin/Release/OgreMain.dll" Release )
copy_dll( ${PROJECT_NAME} "${Ogre_ROOT_DIR}/bin/Debug/RenderSystem_Direct3D9_d.dll" Debug )
copy_dll( ${PROJECT_NAME} "${Ogre_ROOT_DIR}/bin/Release/RenderSystem_Direct3D9.dll" Release )
copy_dll( ${PROJECT_NAME} "${Ogre_ROOT_DIR}/bin/Debug/Plugin_CgProgramManager_d.dll" Debug )
copy_dll( ${PROJECT_NAME} "${Ogre_ROOT_DIR}/bin/Release/Plugin_CgProgramManager.dll" Release )
copy_dll( ${PROJECT_NAME} "${Ogre_ROOT_DIR}/bin/Debug/Plugin_ParticleFX_d.dll" Debug )
copy_dll( ${PROJECT_NAME} "${Ogre_ROOT_DIR}/bin/Release/Plugin_ParticleFX.dll" Release )

set( Build "yes (version ${${PROJECT_NAME}_VERSION_MAJOR}.${${PROJECT_NAME}_VERSION_MINOR}.${${PROJECT_NAME}_VERSION_BUILD})" PARENT_SCOPE )
