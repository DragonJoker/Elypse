string g_placementPieces;
string g_pieceNature;
string g_attaque;
string g_recordedMovements;
string g_placementPieces_save;
string g_pieceNature_save;
string echecs_pass;
string echecs_login;
string l_tempString;

object l_object;
object l_selectedObject;

scene_node l_node, l_pastNode;

int i;
int l_x,l_y;
int l_diffX,l_diffY;
int l_tempX,l_tempY;
int l_temp;
int l_previousPositionX, l_previousPositionY;
int l_selectNumSubMats;

char l_char;
char l_tempChar;
char g_pionRequiredToChange;

real current_pitch;
real previous_pitch;
real l_musicVol;
real l_soundVol;
real l_ticPos;
real l_relativeRegletteWidth;
real l_relativeTicWidth;

camera RootCamera;

vector3 l_position;
vector3 c_offset;
vector3 c_verticalOffset;

bool g_turn;
bool l_tempBool;
bool g_cantPlay;
bool l_mat;
bool g_echec;
bool l_titleShown;
bool l_music;
bool l_sound;
bool g_inGame;
bool g_myTurn;

overlay l_ticMusic;
overlay l_ticSound;


// NETWORK

int msConnect;
int msRefreshGamesList;
int msJoinGame;
int msCreateGame;
int msGame;
int msQuitGame;
int msGameStart;

int mrConnectOK;
int mrConnectFail;
int mrJoinGameOK;
int mrCreateGameOK;
int mrGameDontExist;
int mrGameAlreadyCreated;
int mrGameStart;
int mrRefreshGamesList;
int mrJoinGameFail;
int mrGame;
int mrEndGame;
int mrJoinGame;
int mrQuitGame;

int gm_move;
int gm_take;
int gm_change;
int gm_abandon;

bool l_creator;
string l_selectedGame;
int l_selectedId;
bool l_clicked;
overlay l_selectedPanel;
int l_gamesCount;
bool l_clicked;

string l_distantCharName;

scene_node l_distantNode;

string l_login;
string l_pass;
string g_serverAddr = "127.0.0.1";
int g_serverPort = 12448;