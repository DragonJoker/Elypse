include_directories( ${CMAKE_SOURCE_DIR}/Core/GeneralLib/Src )

add_subdirectory( Core )
add_subdirectory( Tools )
add_subdirectory( Miniline )
add_subdirectory( Plugins )

CoreInit()
ToolsInit()
MinilineInit()
PluginsInit()

CoreBuild()
ToolsBuild()
MinilineBuild()
PluginsBuild()

set( msg "\nElypse following projects will be built" )
CoreSummary( ${msg} )
ToolsSummary( ${msg} )
MinilineSummary( ${msg} )
PluginsSummary( ${msg} )
message( STATUS ${msg} )

if ( ( "${PROJECTS_PACKAGE_WIX}" STREQUAL "ON" ) OR ( "${PROJECTS_PACKAGE_DEB}" STREQUAL "ON" ) OR ( "${PROJECTS_PACKAGE_RPM}" STREQUAL "ON" ) )
	file( MAKE_DIRECTORY "${PROJECTS_SETUP_OUTPUT_DIR}/${CMAKE_BUILD_TYPE}" )
	set( CPACK_PACKAGE_NAME "${MAIN_PROJECT_NAME}" )
	set( CPACK_PACKAGE_VERSION "${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_BUILD}" )
	set( CPACK_PACKAGE_DESCRIPTION_SUMMARY "${MAIN_PROJECT_NAME}" )
	set( CPACK_PACKAGE_DESCRIPTION "Allows ${MAIN_PROJECT_NAME} developments" )
	set( CPACK_PACKAGE_RELEASE 1 )
	set( CPACK_PACKAGE_CONTACT "dragonjoker59@hotmail.com" )
	set( CPACK_PACKAGE_VENDOR "DragonJoker" )
	set( CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION}-${CPACK_PACKAGE_RELEASE}.${PROJECTS_PLATFORM}" )
	set( CPACK_OUTPUT_FILE_PREFIX "${PROJECTS_SETUP_OUTPUT_DIR}/${CMAKE_BUILD_TYPE}" )
	set( CPACK_RESOURCE_FILE_LICENSE "${CMAKE_SOURCE_DIR}/LICENSE" )

	if ( "${PROJECTS_PACKAGE_WIX}" STREQUAL "ON" )
		set( CPACK_GENERATOR "WIX" )
		set( CPACK_PACKAGE_INSTALL_DIRECTORY "${MAIN_PROJECT_NAME}" )
		set( CPACK_WIX_UPGRADE_GUID "E3FDF993-ADFA-41C5-8608-E5E51A65C627" )
		set( CPACK_WIX_PRODUCT_GUID "D3B9CB1E-733B-4148-B21A-B1308D213D6E" )
		set( CPACK_WIX_PRODUCT_ICON "${CMAKE_SOURCE_DIR}/install/${MAIN_PROJECT_NAME}.ico" )
		set( CPACK_WIX_UI_DIALOG "${CMAKE_SOURCE_DIR}/install/dialog.bmp" )
		set( CPACK_WIX_UI_BANNER "${CMAKE_SOURCE_DIR}/install/banner.bmp" )
		set( CPACK_WIX_PROGRAM_MENU_FOLDER "${MAIN_PROJECT_NAME}" )
		set( CPACK_WIX_CULTURES "fr-FR;en-EN" )
		include(CPack)
	elseif ( "${PROJECTS_PACKAGE_DEB}" STREQUAL "ON" )
		set( CPACK_PACKAGING_INSTALL_PREFIX ${CMAKE_INSTALL_PREFIX} )
		set( CPACK_DEB_COMPONENT_INSTALL ON )
		set( CPACK_GENERATOR "DEB" )
		set( CPACK_DEBIAN_PACKAGE_MAINTAINER "Sylvain Doremus" )
		set( CPACK_DEBIAN_PACKAGE_DEPENDS "${CPACK_DEBIAN_PACKAGE_DEPENDS}libogre (>= 2.4.2)" )
		set( CPACK_DEBIAN_PACKAGE_ARCHITECTURE "${CMAKE_SYSTEM_ARCHITECTURE}" )
		set( CPACK_DEBIAN_PACKAGE_SECTION "devel" )
		set( CPACK_DEBIAN_PACKAGE_PRIORITY "optional" )
		include(CPack)
	elseif ( "${PROJECTS_PACKAGE_RPM}" STREQUAL "ON" )
		set( ${PROJECT_PACKAGE_DIR} ${CMAKE_BINARY_DIR}/_CPack_Packages/Linux/RPM )
		set( CPACK_RPM_COMPONENT_INSTALL ON )
		set( CPACK_RPM_PACKAGE_SUMMARY "${MAIN_PROJECT_NAME}" )
		set( CPACK_RPM_PACKAGE_ARCHITECTURE "${CMAKE_SYSTEM_ARCHITECTURE}" )
		set( CPACK_RPM_PACKAGE_GROUP "Development/Tools/Other" )
		set( CPACK_RPM_PACKAGE_LICENSE "LGPL" )
		set( CPACK_RPM_SPEC_MORE_DEFINE "%define _rpmdir ${PROJECT_PACKAGE_DIR}" )
		set( CPACK_RPM_SPEC_MORE_DEFINE "%define _rpmfilename ${CPACK_PACKAGE_FILE_NAME}.rpm" )
		set( CPACK_RPM_SPEC_MORE_DEFINE "%define _unpackaged_files_terminate_build 0" )
		set( CPACK_RPM_SPEC_MORE_DEFINE "%define _topdir ${PROJECT_PACKAGE_DIR}" )
		include(CPack)
	endif()
endif ()

cpack_add_install_type( Minimal )
cpack_add_install_type( Developer )
cpack_add_install_type( Full )

CoreSetup()
ToolsSetup()
MinilineSetup()
PluginsSetup()

