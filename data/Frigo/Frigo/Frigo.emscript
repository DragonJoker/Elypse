RootCamera g_rootCamera;

Player g_tmpPlayer;

Player g_selectedPlayer;

MainPlayer g_me;

bool g_magnetMenuShown;
bool g_fromShopping;
array <string> g_status;

int g_minFriendsMenu;
int g_minFriendsList;

string g_baseSite;

void ToggleFriendsMenu()
{
	g_friendsMenuShown = ( ! g_friendsMenuShown);
	if (g_friendsMenuShown)
	{
		g_minFriendsMenu = 0;
		LoadFriendsForSend( g_minFriendsMenu, g_minFriendsMenu + g_friendsSendCount);
		Overlay_Show( "FriendsMenu");
	}
	else
	{
		Timer_Kill( "FriendsMenuTooltips");
		Overlay_Hide( "FriendsMenu");
	}
}

void SendObjectToFriend()
{
	//TODO Send selected shopping object to selected friend
	if (g_mouse.SendFriendSelected)
	{
		string l_result;
		l_result = StringFromUrl( "http://" + g_baseSite + "/give.php?target_id=" + itoa( g_selectedFriend.FacebookId) + "&id_object=" + itoa( g_selectedShoppingObject.Id), "");
		Echo( "SendObjectToFriend - " + l_result + " - " + itoa( g_selectedFriend.FacebookId));
		if (l_result == "ok")
		{
			FlushFridgeContent();
			g_selectedPlayer->Init( g_selectedPlayer.FacebookId == g_mainPlayersPlayer.FacebookId);
			RefreshFridgeContent();
			ToggleFriendsMenu();
		}
		elseif (l_result == "too much")
		{
			ShowMessageBox( "Impossible d'envoyer" + endl + "cet objet, le frigo" + endl + "de votre ami est plein");
		}
	}
}

void SendShoppingObjectToFriend()
{
	//TODO Send selected shopping object to selected friend
	if (g_mouse.SendFriendSelected)
	{
		string l_result;
		l_result = StringFromUrl( "http://" + g_baseSite + "/gift.php?target_id=" + itoa( g_selectedFriend.FacebookId) + "&id_object=" + itoa( g_selectedShoppingObject.Id), "");
		Echo( "SendShoppingObjectToFriend - " + l_result + " - " + itoa( g_selectedFriend.FacebookId));
		if (l_result == "ok")
		{
			FlushFridgeContent();
			g_selectedPlayer->Init( g_selectedPlayer.FacebookId == g_mainPlayersPlayer.FacebookId);
			RefreshFridgeContent();
			ToggleFriendsMenu();
			g_fromShopping = false;
		}
		elseif (l_result == "too much")
		{
			ShowMessageBox( "Impossible d'envoyer" + endl + "cet objet, le frigo" + endl + "de votre ami est plein");
		}
		elseif (l_result == "no money")
		{
			ShowMessageBox( "Impossible d'acheter" + endl + "cet objet, pas assez" + endl + "d'argent");
		}
	}
}

void UpdateStatusCaption( Player & p_player)
{
	p_player.HealthOV->SetCaption( g_status[p_player.HealthStatus]);
}

void UpdateStatus( Object & p_object)
{
//	Echo( "UpdateStatus");
	g_me.TodaysEaten++;
	g_me.Fruit += p_object.Fruit;
	g_me.Vegetable += p_object.Vegetable;
	g_me.AddedSugar += p_object.AddedSugar;
	g_me.Fat += p_object.Fat;
	real l_balanced;
	real l_unbalanced;
	l_balanced = g_me.Fruit + g_me.Vegetable - 5.0;
	l_unbalanced = g_me.AddedSugar + g_me.Fat - 2.0;
	if (l_balanced < l_unbalanced)
	{
		if (l_balanced < -2.0)
		{
			g_mainPlayersPlayer.HealthStatus = 0;
		}
		elseif (l_balanced < 0.0)
		{
			g_mainPlayersPlayer.HealthStatus = 1;
		}
		else
		{
			g_mainPlayersPlayer.HealthStatus = 2;
		}
	}
	elseif (l_balanced == l_unbalanced)
	{
		g_mainPlayersPlayer.HealthStatus = 3;
	}
	else
	{
		if (l_balanced < -2.0)
		{
			g_mainPlayersPlayer.HealthStatus = 4;
		}
		elseif (l_balanced < 0.0)
		{
			g_mainPlayersPlayer.HealthStatus = 5;
		}
		else
		{
			g_mainPlayersPlayer.HealthStatus = 6;
		}
	}
	// TODO : on informe le serveur de notre nouveau statut ici
	UpdateStatusCaption( g_mainPlayersPlayer);
}

void InitialiseFrigoCamera()
{
	g_rootCamera->Init();
	timer( "RotateCamera", TIMERTYPE_PERMANENT, 0.0)
	{
		if (g_mouse.RightDown)
		{
			g_rootCamera.CurrentPitch = g_rootCamera.PreviousPitch + (150.0 * MOUSE_DIFFERENCE_Y / GENERAL_SCREEN_HEIGHT);
			g_rootCamera.CurrentYaw = g_rootCamera.PreviousYaw + (150.0 * MOUSE_DIFFERENCE_X / GENERAL_SCREEN_WIDTH);
	
			if (g_rootCamera.CurrentPitch < g_rootCamera.MinPitch)
			{
				g_rootCamera.CurrentPitch = g_rootCamera.MinPitch;
			}
			elseif (g_rootCamera.CurrentPitch > g_rootCamera.MaxPitch)
			{
				g_rootCamera.CurrentPitch = g_rootCamera.MaxPitch;
			}
	
			if (g_rootCamera.CurrentYaw < g_rootCamera.MinYaw)
			{
				g_rootCamera.CurrentYaw = g_rootCamera.MinYaw;
			}
			elseif (g_rootCamera.CurrentYaw > g_rootCamera.MaxYaw)
			{
				g_rootCamera.CurrentYaw = g_rootCamera.MaxYaw;
			}
	
			g_rootCamera.Parent->Pitch( g_rootCamera.CurrentPitch - g_rootCamera.PreviousPitch);
			g_rootCamera.Parent->Yaw( g_rootCamera.PreviousYaw - g_rootCamera.CurrentYaw);
			g_rootCamera.PreviousPitch = g_rootCamera.CurrentPitch;
			g_rootCamera.PreviousYaw = g_rootCamera.CurrentYaw;
		}
	}
}

void InitialiseObjectsList()
{
	string l_magnets;
	l_magnets = StringFromUrl( "http://" + g_baseSite + "/list_objects.php", "");
	if (! l_magnets->empty() && strGetChar( l_magnets, 0) != '<')
	{
		Object l_object;
		Magnet l_magnet;
		int l_composed;
		int l_id;
		string l_objects;
		l_objects = strSplitOne( l_magnets, "@");
		while ( ! l_objects->empty() && l_objects != "0|")
		{
			l_id = atoi( strSplitOne( l_objects, "|"));
			l_object.Id = l_id;
			l_object.Name = strSplitOne( l_objects, "|");
			l_object.Mesh = strSplitOne( l_objects, "|");
			l_object.Image = strSplitOne( l_objects, "|");
			l_object.Price = atoi( strSplitOne( l_objects, "|"));
			l_object.Composed = (atoi( strSplitOne( l_objects, "|")) == 1);
			l_object.Fruit = ator( strSplitOne( l_objects, "|"));
			l_object.Vegetable = ator( strSplitOne( l_objects, "|"));
			l_object.AddedSugar = ator( strSplitOne( l_objects, "|"));
			l_object.Fat = ator( strSplitOne( l_objects, "|"));
			g_allObjects->Add( l_id, l_object);
//			Echo( itoa( l_object.Id) + " - " + l_object.Name + " - " + l_object.Mesh + " - " + l_object.Image);
		}
		while ( ! l_magnets->empty() && l_magnets != "0|")
		{
			l_id = atoi( strSplitOne( l_magnets, "|"));
			l_magnet.Id = l_id;
			l_magnet.Material = strSplitOne( l_magnets, "|");
			g_allMagnets->Add( l_id, l_magnet);
			Echo( itoa( l_magnet.Id) + " - " + l_magnet.Material);
		}
	}
}

void InitialiseFrigo()
{
	g_baseSite = "127.0.0.1/Frigo";
	g_status->Add( "Aucune hygiene de vie");
	g_status->Add( "Hygiene de vie deplorable");
	g_status->Add( "Alimentation desequilibree");
	g_status->Add( "Alimentation correcte");
	g_status->Add( "hygiene de vie satisfaisante");
	g_status->Add( "Bonne hygiene de vie");
	g_status->Add( "Excellente hygiene de vie");
	InitialiseObjectsList();

	Sound_Play_Global( "Frigo");

	InitialiseFrigoCamera();
	g_mouse->Init();
	g_me->Init();
	g_fridge->Init();
	g_objectInfos->Init();
	UpdateStatusCaption( g_selectedPlayer);

	g_selectedPlayer.FacebookId = g_mainPlayersPlayer.FacebookId;

	g_shoppingMenuShown = false;
	g_friendVisitConfirmMenuShown = false;
	g_friendsMenuShown = false;

	g_shoppingCount = 25;
	g_friendsListCount = 8;
	g_friendsSendCount = 25;
	g_magnetCount = 9;

	g_canAskForMagnet = true;
	g_placingMagnet = false;
	g_canOpenDoor = true;

	RefreshInfos();

	LoadFriendsForList( 0, g_friendsListCount);

	Overlay_Hide( "ShoppingMenu");
	Overlay_Hide( "FriendsMenu");
	Overlay_Hide( "FriendToVisitConfirm");
	Overlay_Hide( "FriendInfos");
	Overlay_Hide( "BackToMine");
	Overlay_Hide( "Frigo/MessageBox");
	Overlay_Hide( "MagnetConfirm");
	Overlay_Hide( "MagnetDesign");
	Overlay_Hide( "MagnetInfos");
}

InitialiseFrigo();