string g_manBodyMeshes;
string g_manBodyNames;
int g_manMaxBodies;
string g_womanBodyMeshes;
string g_womanBodyNames;
int g_womanMaxBodies;

string g_manHairsMeshes;
string g_manHairsNames;
int g_manMaxHairs;
string g_womanHairsMeshes;
string g_womanHairsNames;
int g_womanMaxHairs;

string g_manHairsMaterials;
string g_manHairsColoursNames;
int g_manMaxHairsMaterials;
string g_womanHairsMaterials;
string g_womanHairsColoursNames;
int g_womanMaxHairsMaterials;

string g_manBeardsMeshes;
string g_manBeardsNames;
int g_manMaxBeards;

string g_manBrowsMeshes;
string g_manBrowsNames;
int g_manMaxBrows;

string g_womanBrowsMeshes;
string g_womanBrowsNames;
int g_womanMaxBrows;

string g_manEyesMaterials;
string g_manEyesColoursNames;
int g_manMaxEyesMaterials;

string g_womanEyesMaterials;
string g_womanEyesColoursNames;
int g_womanMaxEyesMaterials;

string g_womanEyeLashesMaterials;
string g_womanEyeLashesColoursNames;
int g_womanMaxEyeLashesMaterials;

string g_womanLipsticksMaterials;
string g_womanLipsticksColoursNames;
int g_womanMaxLipsticksMaterials;

string g_manDressesMeshes;
string g_manDressesNames;
int g_manMaxDresses;
string g_womanDressesMeshes;
string g_womanDressesNames;
int g_womanMaxDresses;

string g_manSkinsMaterials;
string g_manSkinsNames;
int g_manMaxSkins;
string g_womanSkinsMaterials;
string g_womanSkinsNames;
int g_womanMaxSkins;

object g_mainCharBodyObject;

string common_selectedMesh;
string common_selectedName;
string common_selectedMaterial;

int i;

string rider_charName;

string rider_manBodyMeshes;
string rider_manHairsMeshes;
string rider_manHairsMaterials;
string rider_manDressesMeshes;
string rider_manSkinsMaterials;
string rider_manEyesMaterials;
string rider_manBrowsMeshes;
string rider_manBrowsMaterials;
string rider_manBeardsMeshes;
string rider_manBeardsMaterials;

string rider_manBodyNames;
string rider_manHairsNames;
string rider_manHairsColoursNames;
string rider_manDressesNames;
string rider_manSkinsNames;
string rider_manEyesColoursNames;
string rider_manBrowsNames;
string rider_manBrowsColoursNames;
string rider_manBeardsNames;
string rider_manBeardsColoursNames;

string rider_womanBodyMeshes;
string rider_womanHairsMeshes;
string rider_womanHairsMaterials;
string rider_womanDressesMeshes;
string rider_womanEyesMaterials;
string rider_womanSkinsMaterials;
string rider_womanBrowsMeshes;
string rider_womanBrowsMaterials;
string rider_womanEyeLashesMaterials;
string rider_womanLipsticksMaterials;

string rider_womanBodyNames;
string rider_womanHairsNames;
string rider_womanHairsColoursNames;
string rider_womanDressesNames;
string rider_womanSkinsNames;
string rider_womanEyesColoursNames;
string rider_womanBrowsNames;
string rider_womanBrowsColoursNames;
string rider_womanEyeLashesColoursNames;
string rider_womanLipsticksColoursNames;

string rider_selectedMesh;
string rider_selectedMaterial;
string rider_selectedName;
string rider_tmpMeshes;
string rider_tmpMaterials;
string rider_tmpNames;

string rider_currentBodyMesh;
string rider_currentHairMesh;
string rider_currentHairColour;
string rider_currentDressMesh;
string rider_currentSkinMaterial;
string rider_currentEyeColour;
string rider_currentBrowMesh;
string rider_currentBrowColour;
string rider_currentBeardMesh;
string rider_currentBeardColour;
string rider_currentEyeLashColour;
string rider_currentLipstickColour;

string rider_currentBodyName;
string rider_currentHairName;
string rider_currentHairColourName;
string rider_currentDressName;
string rider_currentSkinName;
string rider_currentEyeColourName;
string rider_currentBeardName;
string rider_currentBeardColourName;
string rider_currentBrowName;
string rider_currentBrowColourName;
string rider_currentEyeLashColourName;
string rider_currentLipstickColourName;

int rider_sex;
int rider_currentBody;
int rider_currentHair;
int rider_currentHairMaterial;
int rider_currentDress;
int rider_currentSkin;
int rider_currentEyeMaterial;
int rider_currentBrow;
int rider_currentBrowMaterial;
int rider_currentBeard;
int rider_currentBeardMaterial;
int rider_currentEyeLashMaterial;
int rider_currentLipstickMaterial;

object rider_body;
object rider_lEye;
object rider_rEye;
object rider_hair;
object rider_beard;
object rider_brow;
object rider_dress;

int rider_manMaxHairs;
int rider_manMaxHairsMaterials;
int rider_manMaxDresses;
int rider_manMaxBodies;
int rider_manMaxSkins;
int rider_manMaxEyesMaterials;
int rider_manMaxBrows;
int rider_manMaxBrowsMaterials;
int rider_manMaxBeards;
int rider_manMaxBeardsMaterials;

int rider_womanMaxHairs;
int rider_womanMaxHairsMaterials;
int rider_womanMaxDresses;
int rider_womanMaxBodies;
int rider_womanMaxSkins;
int rider_womanMaxEyesMaterials;
int rider_womanMaxBrows;
int rider_womanMaxBrowsMaterials;
int rider_womanMaxEyeLashesMaterials;
int rider_womanMaxLipsticksMaterials;

scene_node rider_playerNode;

bool rider_mouseLeftDown;

animation_group rider_persoAnims;
animated_object rider_bodyAnims;
animated_object rider_lEyeAnims;
animated_object rider_rEyeAnims;
animated_object rider_hairAnims;
animated_object rider_beardAnims;
animated_object rider_browAnims;
animated_object rider_dressAnims;

int msConnect;

int mrConnectOK;
int mrConnectFail;
int mrAvatar;

string rider_pass;

string g_animName;

string l_login;
string l_pass;
string g_serverAddr;
int g_serverPort;

void BuildSectionAnimations( animation_group ba_persoAnims, animated_object ba_object)
{
	Echo( "BuildSectionAnimations - Begin");
	ba_persoAnims->StopAllAnimations();
	ba_persoAnims->StopAllAnimations();
	ba_object->GetAnimation( "Stand")->SetLooped( true);
	ba_persoAnims->ChainAnimation( "Ouverture", "Stand");
	Echo( "BuildSectionAnimations - End");
};

void GetMeshAndName( int gman_index, int gman_maxIndex, string gman_meshes, string gman_names)
{
	string gman_tmpMeshes;
	string gman_tmpNames;
	gman_tmpNames = gman_names;
	gman_tmpMeshes = gman_meshes;
	int gman_meshIndex;
	int gman_nameIndex;
	for (i = 0 ; i <= gman_index && i < gman_maxIndex ; i++)
	{
		gman_meshIndex = gman_tmpMeshes->find( "|");
		common_selectedMesh = substr( gman_tmpMeshes, 0, gman_meshIndex);
		gman_tmpMeshes = substr( gman_tmpMeshes, gman_meshIndex + 1, npos);

		gman_nameIndex = gman_tmpNames->find( "|");
		common_selectedName = substr( gman_tmpNames, 0, gman_nameIndex);
		gman_tmpNames = substr( gman_tmpNames, gman_nameIndex + 1, npos);
	};
};

void GetMaterialAndName( int gmaan_index, int gmaan_maxIndex, string gmaan_materials, string gmaan_names)
{
	string gmaan_tmpMaterials;
	string gmaan_tmpNames;
	gmaan_tmpNames = gmaan_names;
	int gmaan_materialIndex;
	int gmaan_nameIndex;
	gmaan_tmpMaterials = gmaan_materials;
	for (i = 0 ; i <= gmaan_index && i < gmaan_maxIndex ; i++)
	{
		gmaan_materialIndex = gmaan_tmpMaterials->find( "|");
		common_selectedMaterial = substr( gmaan_tmpMaterials, 0, gmaan_materialIndex);
		gmaan_tmpMaterials = substr( gmaan_tmpMaterials, gmaan_materialIndex + 1, npos);

		gmaan_nameIndex = gmaan_tmpNames->find( "|");
		common_selectedName = substr( gmaan_tmpNames, 0, gmaan_nameIndex);
		gmaan_tmpNames = substr( gmaan_tmpNames, gmaan_nameIndex + 1, npos);
	};
};

void BuildManBody()
{
//	Echo( "BuildManBody");
	GetMeshAndName( rider_currentBody, g_manMaxBodies, g_manBodyMeshes, g_manBodyNames);
	rider_currentBodyMesh = common_selectedMesh;

	rider_body = Object_CreateWithSkeleton( rider_charName + "_Body", rider_currentBodyMesh, "sarcoperso.skeleton");
	rider_body->SetParent( rider_playerNode);
	rider_persoAnims->AddObject( rider_body);
	BuildSectionAnimations( rider_persoAnims, rider_persoAnims->GetObject( rider_body->GetName()));

	rider_lEye = Object_CreateWithSkeleton( rider_charName + "_LEye", "oeilg.mesh", "sarcoperso.skeleton");
	rider_lEye->SetParent( rider_playerNode);
	rider_persoAnims->AddObject( rider_lEye);
	BuildSectionAnimations( rider_persoAnims, rider_persoAnims->GetObject( rider_lEye->GetName()));

	rider_rEye = Object_CreateWithSkeleton( rider_charName + "_REye", "oeild.mesh", "sarcoperso.skeleton");
	rider_rEye->SetParent( rider_playerNode);
	rider_persoAnims->AddObject( rider_rEye);
	BuildSectionAnimations( rider_persoAnims, rider_persoAnims->GetObject( rider_rEye->GetName()));
};

void BuildManHair()
{
//	Echo( "BuildManHair");
	GetMeshAndName( rider_currentHair, g_manMaxHairs, g_manHairsMeshes, g_manHairsNames);
	rider_currentHairMesh = common_selectedMesh;

	rider_hair = Object_CreateWithSkeleton( rider_charName + "_Hair", rider_currentHairMesh, "sarcoperso.skeleton");
	rider_hair->SetParent( rider_playerNode);
	rider_persoAnims->AddObject( rider_hair);

	for (i = 0 ; i < rider_hair->GetNumSubMaterials() ; i++)
	{
		if (rider_hair->GetSubMaterialName( i)->find( "peau") != npos)
		{
			rider_hair->SetSubMaterial( i, rider_currentSkinMaterial);
		};

		if (rider_hair->GetSubMaterialName( i)->find( "cheveux") != npos)
		{
			rider_hair->SetSubMaterial( i, rider_currentHairColour);
		};
	};

	BuildSectionAnimations( rider_persoAnims, rider_persoAnims->GetObject( rider_hair->GetName()));
};

void BuildManHairColour()
{
//	Echo( "BuildManHairColour");
	GetMaterialAndName( rider_currentHairMaterial, g_manMaxHairsMaterials, g_manHairsMaterials, g_manHairsColoursNames);
	rider_currentHairColour = common_selectedMaterial;

	for (i = 0 ; i < rider_hair->GetNumSubMaterials() ; i++)
	{
		if (rider_hair->GetSubMaterialName( i)->find( "cheveux") != npos)
		{
			rider_hair->SetSubMaterial( i, common_selectedMaterial);
		};
	};
};

void BuildManDress()
{
//	Echo( "BuildManDress");
	GetMeshAndName( rider_currentDress, g_manMaxDresses, g_manDressesMeshes, g_manDressesNames);
	rider_currentDressMesh = common_selectedMesh;

	if (common_selectedMesh != "none")
	{
		rider_dress = Object_CreateWithSkeleton( rider_charName + "_Dress", rider_currentDressMesh, "sarcoperso.skeleton");
		rider_dress->SetParent( rider_playerNode);
		rider_persoAnims->AddObject( rider_dress);
		BuildSectionAnimations( rider_persoAnims, rider_persoAnims->GetObject( rider_dress->GetName()));

		for (i = 0 ; i < rider_dress->GetNumSubMaterials() ; i++)
		{
			if (rider_dress->GetSubMaterialName( i)->find( "peau") != npos)
			{
				rider_dress->SetSubMaterial( i, common_selectedMaterial);
			};
		};
	}
	else
	{
		rider_dress = NULL;
	};
};

void BuildManSkin()
{
//	Echo( "BuildManSkin");
	GetMaterialAndName( rider_currentSkin, g_manMaxSkins, g_manSkinsMaterials, g_manSkinsNames);
	rider_currentSkinMaterial = common_selectedMaterial + "/" + rider_charName;

	if (Material_Exists( rider_currentSkinMaterial))
	{
		Material_Destroy( rider_currentSkinMaterial);
	};

	Material_CreateCopy( common_selectedMaterial, rider_currentSkinMaterial);

	for (i = 0 ; i < rider_body->GetNumSubMaterials() ; i++)
	{
		if (rider_body->GetSubMaterialName( i)->find( "peau") != npos)
		{
			rider_body->SetSubMaterial( i, rider_currentSkinMaterial);
		};
	};

	for (i = 0 ; i < rider_hair->GetNumSubMaterials() ; i++)
	{
		if (rider_hair->GetSubMaterialName( i)->find( "peau") != npos)
		{
			rider_hair->SetSubMaterial( i, rider_currentSkinMaterial);
		};
	};

	if (rider_dress != NULL)
	{
		for (i = 0 ; i < rider_dress->GetNumSubMaterials() ; i++)
		{
			if (rider_dress->GetSubMaterialName( i)->find( "peau") != npos)
			{
				rider_dress->SetSubMaterial( i, rider_currentSkinMaterial);
			};
		};
	};
};

void BuildManEyeColour()
{
//	Echo( "BuildManEyeColour");
	GetMaterialAndName( rider_currentEyeMaterial, g_manMaxEyesMaterials, g_manEyesMaterials, g_manEyesColoursNames);
	rider_currentEyeColour = common_selectedMaterial;
	rider_lEye->SetSubMaterial( 1, common_selectedMaterial);
	rider_rEye->SetSubMaterial( 1, common_selectedMaterial);
};

void BuildManBrow()
{
//	Echo( "BuildManBrow");
	GetMeshAndName( rider_currentBrow, g_manMaxBrows, g_manBrowsMeshes, g_manBrowsNames);
	rider_currentBrowMesh = common_selectedMesh;

	if (common_selectedMesh != "none")
	{
		rider_brow = Object_CreateWithSkeleton( rider_charName + "_Brow", rider_currentBrowMesh, "sarcoperso.skeleton");
		rider_brow->SetParent( rider_playerNode);
		rider_persoAnims->AddObject( rider_brow);

		rider_brow->SetMaterial( rider_currentBrowColour);

		for (i = 0 ; i < rider_brow->GetNumSubMaterials() ; i++)
		{
			if (rider_brow->GetSubMaterialName( i)->find( "cheveux") != npos)
			{
				rider_brow->SetSubMaterial( i, rider_currentBrowColour);
			};
		};
	
		BuildSectionAnimations( rider_persoAnims, rider_persoAnims->GetObject( rider_brow->GetName()));
	}
	else
	{
		rider_brow = NULL;
	};
};

void BuildManBrowColour()
{
//	Echo( "BuildManBrowColour");
	GetMaterialAndName( rider_currentBrowMaterial, g_manMaxHairsMaterials, g_manHairsMaterials, g_manHairsColoursNames);
	rider_currentBrowColour = common_selectedMaterial;
	if (rider_brow != NULL)
	{
		rider_brow->SetMaterial( common_selectedMaterial);
	};
};

void BuildManBeard()
{
//	Echo( "BuildManBeard");
	GetMeshAndName( rider_currentBeard, g_manMaxBeards, g_manBeardsMeshes, g_manBeardsNames);
	rider_currentBeardMesh = common_selectedMesh;

	if (common_selectedMesh != "none")
	{
		rider_beard = Object_CreateWithSkeleton( rider_charName + "_Beard", rider_currentBeardMesh, "sarcoperso.skeleton");
		rider_beard->SetParent( rider_playerNode);
		rider_persoAnims->AddObject( rider_beard);
	
		for (i = 0 ; i < rider_beard->GetNumSubMaterials() ; i++)
		{
			if (rider_beard->GetSubMaterialName( i)->find( "cheveux") != npos)
			{
				rider_beard->SetMaterial( rider_currentBeardColour);
			};
		};
	
		BuildSectionAnimations( rider_persoAnims, rider_persoAnims->GetObject( rider_beard->GetName()));
	}
	else
	{
		rider_beard = NULL;
	};
};

void BuildManBeardColour()
{
//	Echo( "BuildManBeardColour");
	GetMaterialAndName( rider_currentBeardMaterial, g_manMaxHairsMaterials, g_manHairsMaterials, g_manHairsColoursNames);
	rider_currentBeardColour = common_selectedMaterial;
	if (rider_beard != NULL)
	{
		rider_beard->SetMaterial( common_selectedMaterial);
	};
};

void BuildWomanBody()
{
//	Echo( "BuildWomanBody");
	GetMeshAndName( rider_currentBody, g_womanMaxBodies, g_womanBodyMeshes, g_womanBodyNames);
	rider_currentBodyMesh = common_selectedMesh;
	rider_currentBodyName = common_selectedName;

	rider_body = Object_CreateWithSkeleton( rider_charName + "_Body", rider_currentBodyMesh, "sarcopersogirl.skeleton");
	rider_body->SetParent( rider_playerNode);
	rider_persoAnims->AddObject( rider_body);
	BuildSectionAnimations( rider_persoAnims, rider_persoAnims->GetObject( rider_body->GetName()));

	rider_lEye = Object_CreateWithSkeleton( rider_charName + "_LEye", "oeilggirl.mesh", "sarcopersogirl.skeleton");
	rider_lEye->SetParent( rider_playerNode);
	rider_persoAnims->AddObject( rider_lEye);
	BuildSectionAnimations( rider_persoAnims, rider_persoAnims->GetObject( rider_lEye->GetName()));

	rider_rEye = Object_CreateWithSkeleton( rider_charName + "_REye", "oeildgirl.mesh", "sarcopersogirl.skeleton");
	rider_rEye->SetParent( rider_playerNode);
	rider_persoAnims->AddObject( rider_rEye);
	BuildSectionAnimations( rider_persoAnims, rider_persoAnims->GetObject( rider_rEye->GetName()));
};

void BuildWomanHair()
{
//	Echo( "BuildWomanHair");
	GetMeshAndName( rider_currentHair, g_womanMaxHairs, g_womanHairsMeshes, g_womanHairsNames);
	rider_currentHairMesh = common_selectedMesh;

	rider_hair = Object_CreateWithSkeleton( rider_charName + "_Hair", rider_currentHairMesh, "sarcopersogirl.skeleton");
	rider_hair->SetParent( rider_playerNode);
	rider_persoAnims->AddObject( rider_hair);

	for (i = 0 ; i < rider_hair->GetNumSubMaterials() ; i++)
	{
		if (rider_hair->GetSubMaterialName( i)->find( "peau") != npos)
		{
			rider_hair->SetSubMaterial( i, rider_currentSkinMaterial);
		};

		if (rider_hair->GetSubMaterialName( i)->find( "cheveux") != npos)
		{
//			Echo( g_currentCharHairColour);
			rider_hair->SetSubMaterial( i, rider_currentHairColour);
		};
	};

	BuildSectionAnimations( rider_persoAnims, rider_persoAnims->GetObject( rider_hair->GetName()));
};

void BuildWomanHairColour()
{
//	Echo( "BuildManHairColour");
	GetMaterialAndName( rider_currentHairMaterial, g_womanMaxHairsMaterials, g_womanHairsMaterials, g_womanHairsColoursNames);
	rider_currentHairColour = common_selectedMaterial;

	for (i = 0 ; i < rider_hair->GetNumSubMaterials() ; i++)
	{
		if (rider_hair->GetSubMaterialName( i)->find( "cheveux") != npos)
		{
			rider_hair->SetSubMaterial( i, common_selectedMaterial);
		};
	};
};

void BuildWomanDress()
{
//	Echo( "BuildWomanDress");
	GetMeshAndName( rider_currentDress, g_womanMaxDresses, g_womanDressesMeshes, g_womanDressesNames);
	rider_currentDressMesh = common_selectedMesh;
	rider_currentDressName = common_selectedName;

	if (common_selectedMesh != "none")
	{
		rider_dress = Object_CreateWithSkeleton( rider_charName + "_Dress", rider_currentDressMesh, "sarcopersogirl.skeleton");
		rider_dress->SetParent( rider_playerNode);
		rider_persoAnims->AddObject( rider_dress);
		BuildSectionAnimations( rider_persoAnims, rider_persoAnims->GetObject( rider_dress->GetName()));
	}
	else
	{
		rider_dress = NULL;
	};
};

void BuildWomanEyeLash()
{
//	Echo( "BuildWomanEyeLashColour");
	GetMaterialAndName( rider_currentEyeLashMaterial, g_womanMaxEyeLashesMaterials, g_womanEyeLashesMaterials, g_womanEyeLashesColoursNames);
	rider_currentEyeLashColour = common_selectedMaterial;
	if (Material_Exists( rider_currentSkinMaterial))
	{
		if (rider_currentEyeLashMaterial == 0)
		{
			rider_currentEyeLashColour = "yeux" + Material_GetByName( rider_currentSkinMaterial)->GetImageName( 0);
		};
		Material_GetByName( rider_currentSkinMaterial)->ChangeImage( 1, rider_currentEyeLashColour);
	};
};

void BuildWomanLipstick()
{
//	Echo( "BuildWomanLipstickColour");
	GetMaterialAndName( rider_currentLipstickMaterial, g_womanMaxLipsticksMaterials, g_womanLipsticksMaterials, g_womanLipsticksColoursNames);
	rider_currentLipstickColour = common_selectedMaterial;
	if (Material_Exists( rider_currentSkinMaterial))
	{
		if (rider_currentLipstickMaterial == 0)
		{
			rider_currentLipstickColour = "levre" + Material_GetByName( rider_currentSkinMaterial)->GetImageName( 0);
		};
		Material_GetByName( rider_currentSkinMaterial)->ChangeImage( 2, rider_currentLipstickColour);
	};
};

void BuildWomanSkin()
{
//	Echo( "BuildWomanSkin");
	GetMaterialAndName( rider_currentSkin, g_womanMaxSkins, g_womanSkinsMaterials, g_womanSkinsNames);
	rider_currentSkinMaterial = common_selectedMaterial + "/" + rider_charName;

	if (Material_Exists( rider_currentSkinMaterial))
	{
		Material_Destroy( rider_currentSkinMaterial);
	};

	Material_CreateCopy( common_selectedMaterial, rider_currentSkinMaterial);

	for (i = 0 ; i < rider_body->GetNumSubMaterials() ; i++)
	{
		if (rider_body->GetSubMaterialName( i)->find( "peau") != npos)
		{
			rider_body->SetSubMaterial( i, rider_currentSkinMaterial);
		};
	};

	for (i = 0 ; i < rider_hair->GetNumSubMaterials() ; i++)
	{
		if (rider_hair->GetSubMaterialName( i)->find( "peau") != npos)
		{
			rider_hair->SetSubMaterial( i, rider_currentSkinMaterial);
		};
	};

	if (rider_dress != NULL)
	{
		for (i = 0 ; i < rider_dress->GetNumSubMaterials() ; i++)
		{
			if (rider_dress->GetSubMaterialName( i)->find( "peau") != npos)
			{
				rider_dress->SetSubMaterial( i, rider_currentSkinMaterial);
			};
		};
	};
};

void BuildWomanEyeColour()
{
//	Echo( "BuildWomanEyeColour");
	GetMaterialAndName( rider_currentEyeMaterial, g_womanMaxEyesMaterials, g_womanEyesMaterials, g_womanEyesColoursNames);
	rider_currentEyeColour = common_selectedMaterial;
	rider_lEye->SetSubMaterial( 1, common_selectedMaterial);
	rider_rEye->SetSubMaterial( 1, common_selectedMaterial);
};

void BuildWomanBrow()
{
//	Echo( "BuildWomanBrow");
	GetMeshAndName( rider_currentBrow, g_womanMaxBrows, g_womanBrowsMeshes, g_womanBrowsNames);
	rider_currentBrowMesh = common_selectedMesh;

	if (common_selectedMesh != "none")
	{
		rider_brow = Object_CreateWithSkeleton( rider_charName + "_Brow", rider_currentBrowMesh, "sarcopersogirl.skeleton");
		rider_brow->SetParent( rider_playerNode);
		rider_persoAnims->AddObject( rider_brow);

		rider_brow->SetMaterial( rider_currentBrowColour);

		for (i = 0 ; i < rider_brow->GetNumSubMaterials() ; i++)
		{
			if (rider_brow->GetSubMaterialName( i)->find( "cheveux") != npos)
			{
				rider_brow->SetSubMaterial( i, rider_currentBrowColour);
			};
		};
	
		BuildSectionAnimations( rider_persoAnims, rider_persoAnims->GetObject( rider_brow->GetName()));
	}
	else
	{
		rider_brow = NULL;
	};
};

void BuildWomanBrowColour()
{
//	Echo( "BuildWomanBrowColour");
	GetMaterialAndName( rider_currentBrowMaterial, g_womanMaxHairsMaterials, g_womanHairsMaterials, g_womanHairsColoursNames);
	rider_currentBrowColour = common_selectedMaterial;
	if (rider_brow != NULL)
	{
		rider_brow->SetMaterial( common_selectedMaterial);
	};
};

void _processAvatarMessage( string pam_message)
{
	rider_sex = unpack_int( substr( pam_message, 0, 4));
	rider_currentBody = unpack_int( substr( pam_message, 4, 4));
	rider_currentSkin = unpack_int( substr( pam_message, 8, 4));
	rider_currentHair = unpack_int( substr( pam_message, 12, 4));
	rider_currentHairMaterial = unpack_int( substr( pam_message, 16, 4));
	rider_currentDress = unpack_int( substr( pam_message, 20, 4));
	rider_currentEyeMaterial = unpack_int( substr( pam_message, 24, 4));
	rider_currentBrow = unpack_int( substr( pam_message, 28, 4));
	rider_currentBrowMaterial = unpack_int( substr( pam_message, 32, 4));

	rider_persoAnims = AnimationGroup_GetByName( "PersoAnims");

	if (rider_sex == 0)
	{
		rider_currentBeard = unpack_int( substr( pam_message, 36, 4));
		rider_currentBeardMaterial = unpack_int( substr( pam_message, 40, 4));
		BuildManBody();
		BuildManHair();
		BuildManBeard();
		BuildManBrow();
		BuildManDress();
		BuildManEyeColour();
		BuildManHairColour();
		BuildManBeardColour();
		BuildManBrowColour();
		BuildManSkin();
	}
	else
	{
		rider_currentEyeLashMaterial = unpack_int( substr( pam_message, 36, 4));
		rider_currentLipstickMaterial = unpack_int( substr( pam_message, 40, 4));
		BuildWomanBody();
		BuildWomanHair();
		BuildWomanDress();
		BuildWomanBrow();
		BuildWomanEyeColour();
		BuildWomanHairColour();
		BuildWomanBrowColour();
		BuildWomanSkin();
		BuildWomanEyeLash();
		BuildWomanLipstick();
	};
};

void SetNetworkScript_Old()
{
	Echo( "Received message");
	if (NETWORK_CURRENT_MESSAGE == "disconnected")
	{
		Echo( "Disconnected");
		OverlayElement_GetByName( "Rider/Connexion/Text")->SetCaption( "Impossible de" + endl + "se connecter");
		Overlay_Show( "Rider/Connexion");
	}
	else
	{
		int rider_sns_header;
		rider_sns_header = unpack_int( substr( NETWORK_CURRENT_MESSAGE, 0, 4));

		if (rider_sns_header == mrConnectOK)
		{
			Echo( "Connected");
			Overlay_Hide( "Rider/Connexion");
			Overlay_Show( "Menu");
		}
		elseif (rider_sns_header == mrConnectFail)
		{
			Echo( "Not Connected");
			OverlayElement_GetByName( "Rider/Connexion/Text")->SetCaption( "Impossible de" + endl + "se connecter");
			Overlay_Show( "Rider/Connexion");
		}
		else
		{
			string rider_sns_message;
			rider_sns_message = substr( NETWORK_CURRENT_MESSAGE, 4, npos);

			if (rider_sns_header == mrAvatar)
			{
				Echo( "Received avatar message");
				_processAvatarMessage( rider_sns_message);
			};
		};
	};
};

SetNetworkScript()
{

	Overlay_Hide( "Rider/Connexion");
	Overlay_Show( "Menu");
	string rider_sns_message;
	rider_sns_message += pack_int( 0 );
	rider_sns_message += pack_int( 0 );
	rider_sns_message += pack_int( 0 );
	rider_sns_message += pack_int( 0 );
	rider_sns_message += pack_int( 0 );
	rider_sns_message += pack_int( 0 );
	rider_sns_message += pack_int( 0 );
	rider_sns_message += pack_int( 0 );
	rider_sns_message += pack_int( 0 );
	_processAvatarMessage( rider_sns_message);
};

void InitialiseManMeshes()
{
	g_manBodyNames = "Normal|end";
	g_manBodyMeshes = "corps.mesh|end";
	g_manMaxBodies = 1;

	g_manHairsNames = "Normale|";
	g_manHairsMeshes = "coiffe_coupe.mesh|";
	g_manHairsNames += "Punk|";
	g_manHairsMeshes += "coiffe_punk.mesh|";
	g_manHairsNames += "Queue de cheval|";
	g_manHairsMeshes += "coiffe_queuedechev.mesh|";
	g_manHairsNames += "Mage|";
	g_manHairsMeshes += "coiffe_mage.mesh|";
	g_manHairsNames += "Casque Joe|";
	g_manHairsMeshes += "coiffe_joe.mesh|";
	g_manHairsNames += "Ecouteurs|";
	g_manHairsMeshes += "coiffe_musique.mesh|";
	g_manHairsNames += "Casque Romain|";
	g_manHairsMeshes += "coiffe_romain.mesh|";
	g_manHairsNames += "Casque Viking|";
	g_manHairsMeshes += "coiffe_viking.mesh|";
	g_manHairsNames += "Cowboy|";
	g_manHairsMeshes += "coiffe_cowboy.mesh|";
	g_manHairsNames += "Haut de forme|";
	g_manHairsMeshes += "coiffe_hauteforme.mesh|";
	g_manHairsNames += "Alien|";
	g_manHairsMeshes += "coiffe_alien.mesh|";
	g_manHairsNames += "Aluk|";
	g_manHairsMeshes += "coiffe_aluc.mesh|";
	g_manHairsNames += "Angelique|";
	g_manHairsMeshes += "coiffe_ange.mesh|";
	g_manHairsNames += "Batboy|";
	g_manHairsMeshes += "coiffe_batman.mesh|";
	g_manHairsNames += "Demoniaque|";
	g_manHairsMeshes += "coiffe_demon.mesh|";
	g_manHairsNames += "Drake|";
	g_manHairsMeshes += "coiffe_drake.mesh|";
	g_manHairsNames += "Elfique|";
	g_manHairsMeshes += "coiffe_elfe.mesh|";
	g_manHairsNames += "Loup-garou|";
	g_manHairsMeshes += "coiffe_garou.mesh|";
	g_manHairsNames += "Goku|";
	g_manHairsMeshes += "coiffe_goku.mesh|";
	g_manHairsNames += "Halloween|";
	g_manHairsMeshes += "coiffe_haloween.mesh|";
	g_manHairsNames += "Lunk|";
	g_manHairsMeshes += "coiffe_lunk.mesh|";
	g_manHairsNames += "Robot|";
	g_manHairsMeshes += "coiffe_robot.mesh|";
	g_manHairsNames += "Terminator|";
	g_manHairsMeshes += "coiffe_termina.mesh|";
	g_manHairsNames += "Ent|";
	g_manHairsMeshes += "coiffe_trent.mesh|";
	g_manHairsNames += "Vampire|";
	g_manHairsMeshes += "coiffe_vampire.mesh|";
	g_manHairsNames += "Ninja|";
	g_manHairsMeshes += "coiffe_ninja.mesh|";
	g_manHairsNames += "Casquette endroit|";
	g_manHairsMeshes += "coiffe_casquettef.mesh|";
	g_manHairsNames += "Casquette envers|";
	g_manHairsMeshes += "coiffe_casquetteb.mesh|";
	g_manHairsNames += "Obama|";
	g_manHairsMeshes += "coiffe_obama.mesh|";
	g_manHairsNames += "Sarko|";
	g_manHairsMeshes += "coiffe_sarco.mesh|";
	g_manHairsNames += "Tommy|";
	g_manHairsMeshes += "coiffe_cruise.mesh|";
	g_manHairsNames += "end";
	g_manHairsMeshes += "end";
	g_manMaxHairs = 31;

	g_manHairsColoursNames = "Blond|";
	g_manHairsMaterials = "corpsminiboy/cheveux-blond|";
	g_manHairsColoursNames += "Noir|";
	g_manHairsMaterials += "corpsminiboy/cheveux|";
	g_manHairsColoursNames += "Chatain|";
	g_manHairsMaterials += "corpsminiboy/cheveux-chatain|";
	g_manHairsColoursNames += "Roux|";
	g_manHairsMaterials += "corpsminiboy/cheveux-roux|";
	g_manHairsColoursNames += "Gris|";
	g_manHairsMaterials += "corpsminiboy/cheveux-gris|";
	g_manHairsColoursNames += "Blanc|";
	g_manHairsMaterials += "corpsminiboy/cheveux-blanc|";
	g_manHairsColoursNames += "end";
	g_manHairsMaterials += "end";
	g_manMaxHairsMaterials = 6;

	g_manDressesNames = "Torse nu|";
	g_manDressesMeshes = "none|";
	g_manDressesNames += "Cache poussiere|";
	g_manDressesMeshes += "tenue_cachepouss.mesh|";
	g_manDressesNames += "Blouson|";
	g_manDressesMeshes += "tenue_blouzon.mesh|";
	g_manDressesNames += "Plastron romain|";
	g_manDressesMeshes += "tenue_romain.mesh|";
	g_manDressesNames += "Plastron viking|";
	g_manDressesMeshes += "tenue_viking.mesh|";
	g_manDressesNames += "Robe mage|";
	g_manDressesMeshes += "tenue_mage.mesh|";
	g_manDressesNames += "Indy|";
	g_manDressesMeshes += "tenue_indiana.mesh|";
	g_manDressesNames += "Alien|";
	g_manDressesMeshes += "tenue_alien.mesh|";
	g_manDressesNames += "Aluk|";
	g_manDressesMeshes += "tenue_aluc.mesh|";
	g_manDressesNames += "Angelique|";
	g_manDressesMeshes += "tenue_ange.mesh|";
	g_manDressesNames += "Batboy|";
	g_manDressesMeshes += "tenue_batman.mesh|";
	g_manDressesNames += "Demoniaque|";
	g_manDressesMeshes += "tenue_demon.mesh|";
	g_manDressesNames += "Drake|";
	g_manDressesMeshes += "tenue_drake.mesh|";
	g_manDressesNames += "Loup-garou|";
	g_manDressesMeshes += "tenue_garou.mesh|";
	g_manDressesNames += "Lunk|";
	g_manDressesMeshes += "tenue_lunk.mesh|";
	g_manDressesNames += "Robot|";
	g_manDressesMeshes += "tenue_robot.mesh|";
	g_manDressesNames += "Ent|";
	g_manDressesMeshes += "tenue_trent.mesh|";
	g_manDressesNames += "Vampire|";
	g_manDressesMeshes += "tenue_vampire.mesh|";
	g_manDressesNames += "Ninja|";
	g_manDressesMeshes += "tenue_ninja.mesh|";
	g_manDressesNames += "Goku|";
	g_manDressesMeshes += "tenue_goku.mesh|";
	g_manDressesNames += "end";
	g_manDressesMeshes += "end";
	g_manMaxDresses = 20;

	g_manSkinsNames = "Blanc|";
	g_manSkinsMaterials = "corpsminiboy/peau|";
	g_manSkinsNames += "Mat|";
	g_manSkinsMaterials += "corpsminiboy/peau-mat|";
	g_manSkinsNames += "Noir|";
	g_manSkinsMaterials += "corpsminiboy/peau-noir|";
	g_manSkinsNames += "Jaune|";
	g_manSkinsMaterials += "corpsminiboy/peau-jaune|";
	g_manSkinsNames += "Demon|";
	g_manSkinsMaterials += "corpsminiboy/peau-demon|";
	g_manSkinsNames += "Alien|";
	g_manSkinsMaterials += "corpsminiboy/peau-alien|";
	g_manSkinsNames += "Drake|";
	g_manSkinsMaterials += "corpsminiboy/peau-drake|";
	g_manSkinsNames += "Loup Garou|";
	g_manSkinsMaterials += "corpsminiboy/peau-garou|";
	g_manSkinsNames += "Robot|";
	g_manSkinsMaterials += "corpsminiboy/peau-robot|";
	g_manSkinsNames += "Ent|";
	g_manSkinsMaterials += "corpsminiboy/peau-trent|";
	g_manSkinsNames += "Vampire|";
	g_manSkinsMaterials += "corpsminiboy/peau-vampire|";
	g_manSkinsNames += "end";
	g_manSkinsMaterials += "end";
	g_manMaxSkins = 11;

	g_manBeardsNames = "Aucune|";
	g_manBeardsMeshes = "none|";
	g_manBeardsNames += "Barbe|";
	g_manBeardsMeshes += "poils_barbe.mesh|";
	g_manBeardsNames += "Barbe longue|";
	g_manBeardsMeshes += "poils_barbelongue.mesh|";
	g_manBeardsNames += "Barbiche|";
	g_manBeardsMeshes += "poils_barbiche.mesh|";
	g_manBeardsNames += "Bouc|";
	g_manBeardsMeshes += "poils_bouc.mesh|";
	g_manBeardsNames += "Moustache|";
	g_manBeardsMeshes += "poils_moustache.mesh|";
	g_manBeardsNames += "Pattes|";
	g_manBeardsMeshes += "poils_pattes.mesh|";
	g_manBeardsNames += "end";
	g_manBeardsMeshes += "end";
	g_manMaxBeards = 7;

	g_manBrowsNames = "Aucun|";
	g_manBrowsMeshes = "none|";
	g_manBrowsNames += "Sourcils|";
	g_manBrowsMeshes += "sourcils.mesh|";
	g_manBrowsNames += "end";
	g_manBrowsMeshes += "end";
	g_manMaxBrows = 2;

	g_manEyesColoursNames = "Noirs|";
	g_manEyesMaterials = "corpsminiboy/iris|";
	g_manEyesColoursNames += "Bleus|";
	g_manEyesMaterials += "corpsminiboy/iris-bleu|";
	g_manEyesColoursNames += "Verts|";
	g_manEyesMaterials += "corpsminiboy/iris-vert|";
	g_manEyesColoursNames += "Marrons|";
	g_manEyesMaterials += "corpsminiboy/iris-marron|";
	g_manEyesColoursNames += "Rouges|";
	g_manEyesMaterials += "corpsminiboy/iris-rouge|";
	g_manEyesColoursNames += "Jaunes|";
	g_manEyesMaterials += "corpsminiboy/iris-jaune|";
	g_manEyesColoursNames += "end";
	g_manEyesMaterials += "end";
	g_manMaxEyesMaterials = 6;
};

void InitialiseWomanMeshes()
{
	g_womanBodyNames = "Normal|end";
	g_womanBodyMeshes = "corpsgirl.mesh|end";
	g_womanMaxBodies = 1;

	g_womanHairsNames = "Couettes|";
	g_womanHairsMeshes = "coiffe_couettesgirl.mesh|";
	g_womanHairsNames += "Detaches|";
	g_womanHairsMeshes += "coiffe_detachegirl.mesh|";
	g_womanHairsNames += "Queue de cheval|";
	g_womanHairsMeshes += "coiffe_queuedechevgirl.mesh|";
	g_womanHairsNames += "Chouquette|";
	g_womanHairsMeshes += "coiffe_chouquettegirl.mesh|";
	g_womanHairsNames += "Mage|";
	g_womanHairsMeshes += "coiffe_magegirl.mesh|";
	g_womanHairsNames += "Ecouteurs|";
	g_womanHairsMeshes += "coiffe_casquemusiquegirl.mesh|";
	g_womanHairsNames += "Cowgirl|";
	g_womanHairsMeshes += "coiffe_cowgirl.mesh|";
	g_womanHairsNames += "Catgirl|";
	g_womanHairsMeshes += "coiffe_catwomangirl.mesh|";
	g_womanHairsNames += "Ange|";
	g_womanHairsMeshes += "coiffe_angegirl.mesh|";
	g_womanHairsNames += "Demone|";
	g_womanHairsMeshes += "coiffe_demonegirl.mesh|";
	g_womanHairsNames += "Haut de forme|";
	g_womanHairsMeshes += "coiffe_hauteformegirl.mesh|";
	g_womanHairsNames += "Meche|";
	g_womanHairsMeshes += "coiffe_mechegirl.mesh|";
	g_womanHairsNames += "Robot|";
	g_womanHairsMeshes += "coiffe_robotgirl.mesh|";
	g_womanHairsNames += "Ent|";
	g_womanHairsMeshes += "coiffe_trentgirl.mesh|";
	g_womanHairsNames += "Tresse afro|";
	g_womanHairsMeshes += "coiffe_tresseafrogirl.mesh|";
	g_womanHairsNames += "Halloween|";
	g_womanHairsMeshes += "coiffe_haloweengirl.mesh|";
	g_womanHairsNames += "Vampire|";
	g_womanHairsMeshes += "coiffe_vampiregirl.mesh|";
	g_womanHairsNames += "end";
	g_womanHairsMeshes += "end";
	g_womanMaxHairs = 17;

	g_womanHairsColoursNames = "Noirs|";
	g_womanHairsMaterials = "corpsminigirl/cheveux|";
	g_womanHairsColoursNames += "Chatains|";
	g_womanHairsMaterials += "corpsminigirl/cheveux-chatain|";
	g_womanHairsColoursNames += "Blonds|";
	g_womanHairsMaterials += "corpsminigirl/cheveux-blond|";
	g_womanHairsColoursNames += "Roux|";
	g_womanHairsMaterials += "corpsminigirl/cheveux-roux|";
	g_womanHairsColoursNames += "Gris|";
	g_womanHairsMaterials += "corpsminigirl/cheveux-gris|";
	g_womanHairsColoursNames += "Blancs|";
	g_womanHairsMaterials += "corpsminigirl/cheveux-blanc|";
	g_womanHairsColoursNames += "end";
	g_womanHairsMaterials += "end";
	g_womanMaxHairsMaterials = 6;

	g_womanDressesNames = "Sportive|";
	g_womanDressesMeshes = "none|";
	g_womanDressesNames += "Cowboy|";
	g_womanDressesMeshes += "tenue_cowgirl.mesh|";
	g_womanDressesNames += "Robe mage|";
	g_womanDressesMeshes += "tenue_magegirl.mesh|";
	g_womanDressesNames += "Catgirl|";
	g_womanDressesMeshes += "tenue_catwomangirl.mesh|";
	g_womanDressesNames += "Ange|";
	g_womanDressesMeshes += "tenue_angegirl.mesh|";
	g_womanDressesNames += "Demone|";
	g_womanDressesMeshes += "tenue_demonegirl.mesh|";
	g_womanDressesNames += "Jupe|";
	g_womanDressesMeshes += "tenue_jupegirl.mesh|";
	g_womanDressesNames += "Robe echancree|";
	g_womanDressesMeshes += "tenue_robechancregirl.mesh|";
	g_womanDressesNames += "Robe chinoise|";
	g_womanDressesMeshes += "tenue_robechinegirl.mesh|";
	g_womanDressesNames += "Robe medievale|";
	g_womanDressesMeshes += "tenue_robemedgirl.mesh|";
	g_womanDressesNames += "Robot|";
	g_womanDressesMeshes += "tenue_robotgirl.mesh|";
	g_womanDressesNames += "Shorty|";
	g_womanDressesMeshes += "tenue_shortigirl.mesh|";
	g_womanDressesNames += "Ent|";
	g_womanDressesMeshes += "tenue_trentgirl.mesh|";
	g_womanDressesNames += "Vampire|";
	g_womanDressesMeshes += "tenue_vampiregirl.mesh|";
	g_womanDressesNames += "end";
	g_womanDressesMeshes += "end";
	g_womanMaxDresses = 14;

	g_womanSkinsNames = "Blanc|";
	g_womanSkinsMaterials = "corpsminigirl/peau|";
	g_womanSkinsNames += "Mat|";
	g_womanSkinsMaterials += "corpsminigirl/peau-mat|";
	g_womanSkinsNames += "Noir|";
	g_womanSkinsMaterials += "corpsminigirl/peau-noir|";
	g_womanSkinsNames += "Jaune|";
	g_womanSkinsMaterials += "corpsminigirl/peau-jaune|";
	g_womanSkinsNames += "Demon|";
	g_womanSkinsMaterials += "corpsminigirl/peau-demon|";
	g_womanSkinsNames += "Ent|";
	g_womanSkinsMaterials += "corpsminigirl/peau-trent|";
	g_womanSkinsNames += "Vampire|";
	g_womanSkinsMaterials += "corpsminigirl/peau-vampire|";
	g_womanSkinsNames += "end";
	g_womanSkinsMaterials += "end";
	g_womanMaxSkins = 7;

	g_womanBrowsNames = "Aucun|";
	g_womanBrowsMeshes = "none|";
	g_womanBrowsNames += "Sourcils|";
	g_womanBrowsMeshes += "sourcilsgirl.mesh|";
	g_womanBrowsNames += "end";
	g_womanBrowsMeshes += "end";
	g_womanMaxBrows = 2;

	g_womanEyesColoursNames = "Noirs|";
	g_womanEyesMaterials = "corpsminigirl/iris|";
	g_womanEyesColoursNames += "Bleus|";
	g_womanEyesMaterials += "corpsminigirl/iris-bleu|";
	g_womanEyesColoursNames += "Verts|";
	g_womanEyesMaterials += "corpsminigirl/iris-vert|";
	g_womanEyesColoursNames += "Marrons|";
	g_womanEyesMaterials += "corpsminigirl/iris-marron|";
	g_womanEyesColoursNames += "Rouges|";
	g_womanEyesMaterials += "corpsminigirl/iris-rouge|";
	g_womanEyesColoursNames += "Jaunes|";
	g_womanEyesMaterials += "corpsminigirl/iris-jaune|";
	g_womanEyesColoursNames += "end";
	g_womanEyesMaterials += "end";
	g_womanMaxEyesMaterials = 6;

	g_womanEyeLashesColoursNames = "Aucun|";
	g_womanEyeLashesMaterials = "yeuxcorpsgirl.jpg|";
	g_womanEyeLashesColoursNames += "Noir|";
	g_womanEyeLashesMaterials += "yeuxnoirs.jpg|";
	g_womanEyeLashesColoursNames += "Bleu|";
	g_womanEyeLashesMaterials += "yeuxbleus.jpg|";
	g_womanEyeLashesColoursNames += "Rose|";
	g_womanEyeLashesMaterials += "yeuxroses.jpg|";
	g_womanEyeLashesColoursNames += "end";
	g_womanEyeLashesMaterials += "end";
	g_womanMaxEyeLashesMaterials = 4;

	g_womanLipsticksColoursNames = "Aucun|";
	g_womanLipsticksMaterials = "transparent.jpg|";
	g_womanLipsticksColoursNames += "Noir|";
	g_womanLipsticksMaterials += "levrenoire.jpg|";
	g_womanLipsticksColoursNames += "Bleu|";
	g_womanLipsticksMaterials += "levrebleu.jpg|";
	g_womanLipsticksColoursNames += "Rose|";
	g_womanLipsticksMaterials += "levrerose.jpg|";
	g_womanLipsticksColoursNames += "end";
	g_womanLipsticksMaterials += "end";
	g_womanMaxLipsticksMaterials = 4;
};

void InitialiseNetwork()
{
	Scene_Load( "Perso");
	InitialiseManMeshes();
	InitialiseWomanMeshes();

	rider_charName = l_login;
	rider_pass = l_pass;

	msConnect = 0;

	mrConnectOK = 0;
	mrConnectFail = 1;
	mrAvatar = 4;

	rider_playerNode = SceneNode_GetByName( "PersoNode");

	Network_CreateClient( "RiderClient");
	Network_ConnectClient( "RiderClient", g_serverAddr, g_serverPort);
	timer( "WaitConnect", TIMERTYPE_ONCE, 1.0)
	{
		Network_ClientSendMessage( "RiderClient", pack_int( msConnect) + pack_int( rider_charName->length()) + rider_charName + pack_int( 32) + rider_pass);
	};
};