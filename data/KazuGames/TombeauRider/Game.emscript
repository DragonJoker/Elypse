bool l_sound;
bool l_music;
bool l_inGame;
bool l_paused;
bool l_inZombie;
bool l_leftDown;
bool l_rightDown;
bool l_gameStarted;

real l_musicVol;
real l_soundVol;
real l_acceleration;
real l_gravity;
real l_runTime;
real l_elapsedTime;
real l_diffTime;
real l_currentPitch;
real l_previousPitch;
real l_wantedPitch;
real l_currentZoom;
real l_playedAnimLength;
real l_zombieRadius;
real l_statueRadius;
real l_nearestZombie;
real l_nearestStatue;
real l_currentAngle;
real l_maxRunTime;
real l_runTimeSave;
real l_beginTime;

int l_nbMinute;
int l_nbSeconde;
int l_nbCentieme;
int l_maxLevel;
int l_currentLevel;
int l_nbZombies;
int l_nbStatues;
int l_nbSteps;
int i;
int j;
int l_statueValue;
int l_zombieValue;
int l_nbMaxZombies;
int l_zombieSavaged;
int l_statueRetrieved;
int l_nbLives;

vector3 l_currentVelocity;
vector3 l_previousVelocity;
vector3 l_zombiePosition;
vector3 l_statuePosition;
vector3 l_position;
vector3 l_orientation;
vector3 l_top;
vector3 l_bottom;
vector3 l_finishBegin;
vector3 l_finishMiddle;
vector3 l_finishEnd;

overlay l_start;
overlay l_scoreInGame;
overlay l_chronoInGame;

scene_node l_rootNode;
scene_node l_charNode;
scene_node l_zombieNode;
scene_node l_statueNode;

animation_group l_charAnims;
animation_group l_zombiesAnims;

string l_animName;
string l_previousAnimName;

object l_momieCorps;
object l_momieBande;
object l_momieGant;
object l_momieMasque;
object l_momieTenue;
object l_statue;

real l_ticPos;
real l_relativeRegletteWidth;
real l_relativeTicWidth;

overlay l_ticMusic;
overlay l_ticSound;

camera l_rootCamera;

void PlaceCamera()
{
	timer( "PlaceCamera", TIMERTYPE_REPEAT, 0.0)
	{
		if (CURRENTTIMER_NUMEXECS <= 90)
		{
			l_currentZoom = l_currentZoom - 140.0;
			l_rootCamera->GetParent()->Yaw( 2.0);
			l_rootCamera->GetParent()->Pitch( -1.0);
			l_rootCamera->SetPosition( l_rootCamera->GetPosition() * (l_currentZoom / V3_GetLength( l_rootCamera->GetPosition())));
		}
		else
		{
			Timer_Kill( "PlaceCamera");
		};
	};
};

void HideZombies()
{
	for (i = 0 ; i < l_nbMaxZombies ; i++)
	{
		if (SceneNode_Exists( "ZombieNode_" + itoa( i)))
		{
			SceneNode_GetByName( "ZombieNode_" + itoa( i))->Hide();
			Object_GetByName( "ZombieCorps_" + itoa( i))->Hide();
		};
	};
};

void HideStatues()
{
	for (i = 0 ; i < l_nbStatues ; i++)
	{
		if (SceneNode_Exists( "StatueNode" + itoa( i)))
		{
			SceneNode_GetByName( "StatueNode" + itoa( i))->Hide();
			Object_GetByName( "Statue" + itoa( i))->Hide();
		};
	};
};

void PlaceZombies()
{
	HideZombies();
	l_nbMaxZombies = 0;
	l_nbSteps = 2 * (l_currentLevel + 1);
	for (i = 0 ; i <= l_nbSteps ; i++)
	{
		if (i % 2 == 0)
		{
			l_nbZombies = i / 2;
		}
		else
		{
			l_nbZombies = (i + 1) / 2;
		};
		for (j = (0 - l_nbZombies) ; j <= l_nbZombies ; j++)
		{
			if ( ! SceneNode_Exists( "ZombieNode_" + itoa( l_nbMaxZombies)))
			{
				l_zombieNode = SceneNode_Create( "ZombieNode_" + itoa( l_nbMaxZombies));
				l_zombieNode->Yaw( 180.0);

				l_momieCorps = Object_Create( "ZombieCorps_" + itoa( l_nbMaxZombies), "corpsmomie.mesh");
				l_momieBande = Object_Create( "ZombieBandes_" + itoa( l_nbMaxZombies), "bandemomie.mesh");
				l_momieGant = Object_Create( "ZombieGant_" + itoa( l_nbMaxZombies), "gantmomie.mesh");
				l_momieMasque = Object_Create( "ZombieMasque_" + itoa( l_nbMaxZombies), "masquemomie.mesh");
				l_momieTenue = Object_Create( "ZombieTenue_" + itoa( l_nbMaxZombies), "tenumomie.mesh");
	
				l_momieCorps->SetParent( l_zombieNode);
				l_momieBande->SetParent( l_zombieNode);
				l_momieGant->SetParent( l_zombieNode);
				l_momieMasque->SetParent( l_zombieNode);
				l_momieTenue->SetParent( l_zombieNode);
	
				l_zombiesAnims->AddObject( l_momieCorps);
				l_zombiesAnims->AddObject( l_momieBande);
				l_zombiesAnims->AddObject( l_momieGant);
				l_zombiesAnims->AddObject( l_momieMasque);
				l_zombiesAnims->AddObject( l_momieTenue);
	
				l_zombiesAnims->GetObject( "ZombieCorps_" + itoa( l_nbMaxZombies))->GetAnimation( "marche")->SetLooped( true);
				l_zombiesAnims->GetObject( "ZombieBandes_" + itoa( l_nbMaxZombies))->GetAnimation( "marche")->SetLooped( true);
				l_zombiesAnims->GetObject( "ZombieGant_" + itoa( l_nbMaxZombies))->GetAnimation( "marche")->SetLooped( true);
				l_zombiesAnims->GetObject( "ZombieMasque_" + itoa( l_nbMaxZombies))->GetAnimation( "marche")->SetLooped( true);
				l_zombiesAnims->GetObject( "ZombieTenue_" + itoa( l_nbMaxZombies))->GetAnimation( "marche")->SetLooped( true);
			}
			else
			{
				l_zombieNode = SceneNode_GetByName( "ZombieNode_" + itoa( l_nbMaxZombies));
				l_zombieNode->Show();
				Object_GetByName( "ZombieCorps_" + itoa( l_nbMaxZombies))->Show();
			};
			l_zombiePosition = V3_LinearInterpolation( l_bottom, l_top, (itor( i) / itor( l_nbSteps)));
			l_zombiePosition = SetVector3( (800.0 * itor( j)) + rand( -500.0, 500.0), (l_zombiePosition[1]), (l_zombiePosition[2]));
			l_zombieNode->SetPosition( l_zombiePosition);
			l_nbMaxZombies++;
		};
	};
	l_zombiesAnims->StartAnimation( "marche");
};

void PlaceStatues()
{
	HideStatues();
	l_nbStatues = 2 * (l_currentLevel + 1) * (l_currentLevel + 1);
	for (i = 0 ; i < l_nbStatues ; i++)
	{
		if ( ! SceneNode_Exists( "StatueNode" + itoa( i)))
		{
			l_statueNode = SceneNode_Create( "StatueNode" + itoa( i));
			l_statueNode->Yaw( 180.0);
			l_statueNode->SetScale( SetVector3( 2.0, 2.0, 2.0));

			l_statue = Object_Create( "Statue" + itoa( i), "statuette.mesh");

			l_statue->SetParent( l_statueNode);
		}
		else
		{
			l_statueNode = SceneNode_GetByName( "StatueNode" + itoa( i));
			l_statueNode->Show();
			Object_GetByName( "Statue" + itoa( i))->Show();
		};
		l_statuePosition = V3_LinearInterpolation( l_bottom, l_top, (itor( i) / itor( l_nbStatues)));
		l_statuePosition = SetVector3( 40.0 + rand( -200.0 * itor( i) / (itor( l_currentLevel) / 2.0) , 200.0 * itor( i) / (itor( l_currentLevel) / 2.0)), (l_statuePosition[1]) + 30.0, (l_statuePosition[2]));
		l_statueNode->SetPosition( l_statuePosition);
	};
	l_zombiesAnims->StartAnimation( "marche");
};

void UpdateChrono()
{
	l_nbMinute = rtoi( l_runTime) / 60;
	l_runTime = l_runTime - itor( l_nbMinute * 60);
	l_nbSeconde = rtoi( l_runTime);
	l_runTime = l_runTime - itor( l_nbSeconde);
	l_nbCentieme = rtoi( l_runTime * 100.0);
	l_chronoInGame->SetCaption( "Chrono : " + itoa( l_nbMinute) + "m" + itoa( l_nbSeconde) + "s" + itoa( l_nbCentieme));
};

void UpdateMaxTime()
{
	l_nbMinute = rtoi( l_maxRunTime) / 60;
	l_runTime = l_maxRunTime - itor( l_nbMinute * 60);
	l_nbSeconde = rtoi( l_runTime);
	l_runTime = l_runTime - itor( l_nbSeconde);
	l_nbCentieme = rtoi( l_runTime * 100.0);
	OverlayElement_GetByName( "TopRight/TotalTime/Var")->SetCaption( itoa( l_nbMinute) + "m" + itoa( l_nbSeconde) + "s" + itoa( l_nbCentieme));
};

void LaunchDescent();

void PlayerReady()
{
	l_inGame = false;
	timer ("Pret", TIMERTYPE_CONTINUOUS, 5.0)
	{
		if (CURRENTTIMER_TIME_ELAPSED >= 1.0 && CURRENTTIMER_TIME_ELAPSED < 2.0)
		{
			if (l_start->GetCaption() != "3")
			{
				OverlayElement_GetByName( "Start/Text")->Hide();
				l_start->SetCaption( "3");
				l_start->Show();
			};
		}
		elseif (CURRENTTIMER_TIME_ELAPSED >= 2.0 && CURRENTTIMER_TIME_ELAPSED < 3.0)
		{
			if (l_start->GetCaption() == "3")
			{
				l_start->SetCaption( "2");
			};
		}
		elseif (CURRENTTIMER_TIME_ELAPSED >= 3.0 && CURRENTTIMER_TIME_ELAPSED < 4.0)
		{
			if (l_start->GetCaption() == "2")
			{
				l_start->SetCaption( "1");
			};
		}
		elseif (CURRENTTIMER_TIME_ELAPSED >= 4.0)
		{
			if (l_start->GetCaption() == "1")
			{
				l_start->Hide();
				l_start->SetCaption( "Scrogneugneu");
				OverlayElement_GetByName( "Start/Text")->SetCaption( "Go !");
				OverlayElement_GetByName( "Start/Text")->Show();
			};
		};
	};
	timer ("FinPret", TIMERTYPE_ONCE, 5.0)
	{
		Overlay_Hide( "Start");
		OverlayElement_GetByName( "Start/Text")->SetCaption( "Level " + itoa( l_currentLevel + 1));
		Timer_Play( "Riding");
		LaunchDescent();
	};
};

void StartLevel()
{
	PlaceZombies();
	PlaceStatues();
	PlayerReady();
};

void StartGame()
{
	l_currentVelocity = SetVector3( 0.0, 0.0, 0.0);
	l_previousVelocity = l_currentVelocity;
	l_acceleration = 0.0;
	l_runTimeSave = 0.0;

	l_charNode->SetPosition( SetVector3( 40.0, 16439.0, 1935.0));
	l_charNode->SetOrientation( SetQuaternion( SetVector3( 1.0, 1.0, 1.0), 0.0));

	l_animName = "ouverture";
	l_charAnims->StopAnimation( "droite");
	l_charAnims->StopAnimation( "gauche");
	l_charAnims->StartAnimation( "ouverture");
	l_charAnims->PauseAnimation( "ouverture");

	Overlay_Hide( "Title");
	Overlay_Hide( "Menu");
	Overlay_Show( "Score");
	Overlay_Show( "MenuInGame");
	Overlay_Show( "TopRight");
	l_start->Hide();
	Overlay_Show( "Start");
	l_statueRetrieved = -1;
	l_zombieSavaged = -1;
	l_elapsedTime = 0.0;
	l_inGame = true;
	l_paused = false;

	l_runTime = 0.0;
	l_nbMinute = 0;
	l_nbSeconde = 0;
	l_nbCentieme = 0;
	UpdateChrono();
	UpdateScore();

	l_charAnims->StartAnimation( "ouverture");
	timer ("FinOuverture", TIMERTYPE_ONCE, l_charAnims->GetObject("Corps")->GetAnimation( "ouverture")->GetLength())
	{
		Object_GetByName( "CouvercleSarcophage")->Hide();
		l_animName = "stand";
		StartLevel();
		timer( "OrientSarcophagus", TIMERTYPE_REPEAT, 0.0)
		{
			if (CURRENTTIMER_NUMEXECS <= 30)
			{
				l_charNode->Translate( SetVector3( 0.0, 0.0, 4.0));
				l_charNode->Pitch( 1.5);
			}
			else
			{
				Timer_Kill( "OrientSarcophagus");
			};
		};
	};
};

void LoseGame()
{
	l_start->Hide();
	OverlayElement_GetByName( "Start/Text")->Show();
	OverlayElement_GetByName( "Start/Text")->SetCaption( "Perdu !");
	Overlay_Show( "Start");
};

void WinGame()
{
	l_start->Hide();
	OverlayElement_GetByName( "Start/Text")->Show();
	OverlayElement_GetByName( "Start/Text")->SetCaption( "Gagne !");
	Overlay_Show( "Start");
};

void LaunchDescent()
{
	l_beginTime = l_elapsedTime;
	l_inGame = true;

	timer( "Riding", TIMERTYPE_PERMANENT, 0.0)
	{
		if (l_runTimeSave > l_maxRunTime)
		{
			Echo( "Lose  by time");
			Timer_Kill( "Riding");
			LoseGame();
		};
		l_previousVelocity = l_currentVelocity;

		if ( ! l_inZombie)
		{
			l_currentVelocity = SetVector3( l_currentVelocity[0] + l_acceleration * 0.05, l_currentVelocity[1] + l_gravity * 0.02, 0.0);
		}
		else
		{
			l_currentVelocity = SetVector3( 0.0, 0.0, 0.0);
		};

		l_position = l_charNode->GetPosition();

		if (l_position[0] > 3000.0)
		{
			l_currentVelocity = SetVector3( 0.0, l_currentVelocity[1], 0.0);
			l_charNode->SetPosition( SetVector3( 3000.0, l_position[1], l_position[2]));
		}
		elseif (l_position[0] < -3000.0)
		{
			l_currentVelocity = SetVector3( 0.0, l_currentVelocity[1], 0.0);
			l_charNode->SetPosition( SetVector3( -3000.0, l_position[1], l_position[2]));
		};

		if ((l_position[1]) < 100.0)
		{
			l_zombieSavaged = -1;
			l_statueRetrieved = -1;
			l_nbLives++;
			if (l_nbLives > 5)
			{
				l_nbLives = 5;
			};
			l_charAnims->StopAnimation( "stand");
			l_charAnims->StopAnimation( "droite");
			l_charAnims->StopAnimation( "gauche");
			l_charAnims->StartAnimation( "end");
			timer( "endEnd", TIMERTYPE_ONCE, l_charAnims->GetObject("Corps")->GetAnimation( "end")->GetLength())
			{
				l_charAnims->StartAnimation( "stand");
			};
			OverlayElement_GetByName( "Life" + itoa( l_nbLives))->Show();
			l_inGame = false;
			l_currentVelocity	= SetVector3( 0.0, 0.0, 0.0);
			l_previousVelocity = l_currentVelocity;
			l_acceleration = 0.0;
			if (l_currentLevel < l_maxLevel)
			{
				if (l_currentLevel == 1)
				{
					l_zombieValue = 500;
					l_statueValue = 1000;
					l_maxRunTime = 13.0;
					UpdateMaxTime();
				}
				elseif (l_currentLevel == 2)
				{
					l_zombieValue = 700;
					l_statueValue = 1400;
					l_maxRunTime = 11.0;
					UpdateMaxTime();
				}
				elseif (l_currentLevel == 3)
				{
					l_zombieValue = 1000;
					l_statueValue = 2000;
					l_maxRunTime = 10.0;
					UpdateMaxTime();
				};
				l_currentLevel++;
				timer( "NextLevel", TIMERTYPE_ONCE, 1.0)
				{
					StartGame();
				};
			}
			else
			{
				g_score = g_score + (l_nbLives * 3000);
				UpdateScore();
				_submitHighscore();
				WinGame();
			};
			Timer_Kill( "Riding");
		};

		if (l_currentVelocity->Length() > 0.0)
		{
			l_charNode->Translate( SetVector3( 100.0 * l_currentVelocity[0] * GENERAL_ELAPSED_TIME, -100.0 * l_currentVelocity[1] * GENERAL_ELAPSED_TIME, 100.0 * l_currentVelocity[1] * GENERAL_ELAPSED_TIME));
		};

		if (l_inGame)
		{
			l_elapsedTime += GENERAL_ELAPSED_TIME;
			l_runTime = l_elapsedTime - l_beginTime;
			l_runTimeSave = l_runTime;
			UpdateChrono();
			for (i = 0 ; i < l_nbMaxZombies ; i++)
			{
				if (l_zombieSavaged == i)
				{
					continue();
				};

				l_zombieNode = SceneNode_GetByName( "ZombieNode_" + itoa( i));
				if ( ! Object_GetByName( "ZombieCorps_" + itoa( i))->IsVisible())
				{
					continue();
				};
				l_nearestZombie = (l_zombieNode->GetPosition() - l_charNode->GetPosition())->Length();

				if (l_nearestZombie < l_zombieRadius)
				{
					l_charAnims->StopAnimation( "droite");
					l_charAnims->StopAnimation( "gauche");
					l_charAnims->StopAnimation( "stand");
					l_charAnims->StartAnimation( "end");
					timer( "endEnd", TIMERTYPE_ONCE, l_charAnims->GetObject("Corps")->GetAnimation( "end")->GetLength())
					{
						l_charAnims->StartAnimation( "stand");
					};
					g_score = g_score - l_zombieValue;
					UpdateScore();
					l_inZombie = true;
					OverlayElement_GetByName( "Life" + itoa( l_nbLives))->Hide();
					l_nbLives = l_nbLives - 1;
					if (l_nbLives < 0)
					{
						Timer_Kill( "Riding");
						LoseGame();
					};

					Sound_Play( "Ouch", "PersoNode");

					l_previousVelocity = (-2.0) * l_currentVelocity;
					l_currentVelocity = SetVector3( (-2.0) * l_currentVelocity[0], 0.0, (-2.0) * l_currentVelocity[2]);
					l_zombieSavaged = i;
					AnimationGroup_GetByName( "Perso")->PauseAnimation( "stand");

					timer( "EndCrash", TIMERTYPE_ONCE, 2.0)
					{
						l_inZombie = false;
						l_currentVelocity = SetVector3( 0.0, 0.0, 0.0);
						l_acceleration = 0.0;
						l_previousVelocity = l_currentVelocity;

						l_charAnims->StartAnimation( "stand");

						SceneNode_GetByName( "ZombieNode_" + itoa( l_zombieSavaged))->Hide();
						Object_GetByName( "ZombieCorps_" + itoa( l_zombieSavaged))->Hide();
					};
					break();
				};
			};
			for (i = 0 ; i < l_nbStatues ; i++)
			{
				if (l_statueRetrieved == i)
				{
					continue();
				};

				l_statueNode = SceneNode_GetByName( "StatueNode" + itoa( i));
				if ( ! Object_GetByName( "Statue" + itoa( i))->IsVisible())
				{
					continue();
				};
				l_nearestStatue = (l_statueNode->GetPosition() - l_charNode->GetPosition())->Length();

				if (l_nearestStatue < l_statueRadius)
				{
					g_score = g_score + l_statueValue;
					UpdateScore();

					Sound_Play_Global( "Statue");

					l_statueRetrieved = i;

					SceneNode_GetByName( "StatueNode" + itoa( l_statueRetrieved))->Hide();
					Object_GetByName( "Statue" + itoa( l_statueRetrieved))->Hide();
				};
			};
		};
	};
};

void BeginGame()
{
	g_score = 0;
	UpdateScore();
	l_gameStarted = true;

	l_currentZoom = 15000.0;
	l_currentPitch = 30.0;

	l_currentLevel = 1;
	l_maxRunTime = 14.0;
	UpdateMaxTime();

	OverlayElement_GetByName( "Life4")->Hide();
	OverlayElement_GetByName( "Life5")->Hide();

	l_rootCamera->GetParent()->SetOrientation( SetQuaternion( SetVector3( 1.0, 1.0, 1.0), 0.0));
	l_rootCamera->GetParent()->Pitch( l_currentPitch);
	l_rootCamera->SetPosition( SetVector3( 0.0, 0.0, 15000.0));
	PlaceCamera();
	StartGame();
/*
	timer ("Launch", TIMERTYPE_ONCE, l_charAnims->GetObject("Corps")->GetAnimation( "ouverture")->GetLength())
	{
		StartLevel();
		timer ("FinPret", TIMERTYPE_ONCE, 5.0)
		{
			l_inGame = true;
			Overlay_Hide( "Start");
			OverlayElement_GetByName( "Start/Text")->SetCaption( "Level " + itoa( l_currentLevel + 1));
			LaunchDescent();
		};
	};
*/
};

void PauseGame()
{
	Overlay_Hide( "MenuInGame");
	Overlay_Hide( "Score");
	Overlay_Hide( "TopRight");
	OverlayElement_GetByName( "Menu/Recommencer")->Show();
	OverlayElement_GetByName( "Menu/Jouer")->Hide();
	OverlayElement_GetByName( "Menu/Continuer")->Show();
	Overlay_Show( "Menu");
	Timer_PauseAll();
	l_paused = true;
};

void StopGame()
{
	Overlay_Hide( "MenuInGame");
	Overlay_Hide( "Score");
	Overlay_Hide( "TopRight");
	OverlayElement_GetByName( "Menu/Recommencer")->Show();
	OverlayElement_GetByName( "Menu/Jouer")->Hide();
	OverlayElement_GetByName( "Menu/Continuer")->Show();
	Overlay_Show( "Menu");

	l_paused = false;
	l_inGame = false;
	l_gameStarted = false;

	OverlayElement_GetByName( "Life1")->Show();
	OverlayElement_GetByName( "Life2")->Show();
	OverlayElement_GetByName( "Life3")->Show();
	OverlayElement_GetByName( "Life4")->Hide();
	OverlayElement_GetByName( "Life5")->Hide();
	OverlayElement_GetByName( "Start/Text")->SetCaption("Level 1");
	OverlayElement_GetByName( "Start/Text")->Show();
	l_start->SetCaption( "1");
	l_start->Hide();

	l_nbLives = 3;

	g_score = 0;
	UpdateScore();
	l_runTime = 0.0;
	UpdateChrono();

	Timer_Kill( "Pret");
	Timer_Kill( "PlaceCamera");
	Timer_Kill( "Riding");
	Timer_Kill( "endEnd");
	Timer_Kill( "Launch");
	Timer_Kill( "FinPret");
	Timer_Kill( "NextLevel");
	Timer_Kill( "LaunchLevel");
	Timer_Kill( "FinPretNext");
	Timer_Kill( "FinOuverture");
	Timer_Kill( "OrientSarcophagus");
	Timer_Kill( "EndCrash");

	l_charAnims->StopAnimation( "droite");
	l_charAnims->StopAnimation( "gauche");
	l_charAnims->StopAnimation( "stand");
	l_charAnims->StopAnimation( "end");
	l_charAnims->StopAnimation( "ouverture");

	l_zombiesAnims->StopAnimation( "marche");
	l_zombiesAnims->StopAnimation( "projeter");

	Object_GetByName( "CouvercleSarcophage")->Show();

	HideZombies();
	HideStatues();
};

void ContinueGame()
{
	Overlay_Hide( "Menu");
	Overlay_Show( "Score");
	Overlay_Show( "MenuInGame");
	Overlay_Show( "TopRight");
	l_paused = false;

	Timer_Play( "Pret");
	Timer_Play( "PlaceCamera");
	if (l_inGame)
	{
		Timer_Play( "Riding");
	};
	Timer_Play( "endEnd");
	Timer_Play( "Launch");
	Timer_Play( "FinPret");
	Timer_Play( "NextLevel");
	Timer_Play( "LaunchLevel");
	Timer_Play( "FinPretNext");
	Timer_Play( "FinOuverture");
	Timer_Play( "OrientSarcophagus");
	Timer_Play( "EndCrash");
};

void Initialise()
{
	l_sound = false;
	l_music = false;
	l_inGame = false;
	l_paused = false;
	l_gameStarted = false;
	l_currentPitch = 30.0;
	l_previousPitch = 30.0;
	l_currentZoom = 15000.0;
	l_musicVol = 1.0;
	l_soundVol = 1.0;
	l_currentVelocity = SetVector3( 0.0, 0.0, 0.0);
	l_previousVelocity = SetVector3( 0.0, 0.0, 0.0);
	l_top = SetVector3( 40.0, 15040.0, 3235.0);
	l_bottom = SetVector3( 40.0, 1900.0, 16500.0);
	l_acceleration = 0.0;
	l_gravity = 9.81;
	g_score = 0;
	l_nbMinute = 0;
	l_nbSeconde = 0;
	l_nbCentieme = 0;
	l_maxLevel = 4;
	l_currentLevel = 1;
	l_nbLives = 3;
	l_nbMaxZombies = 0;
	l_nbStatues = 0;
	l_statueValue = 700;
	l_zombieValue = 300;
	l_runTime = 0.0;
	l_elapsedTime = 0.0;
	l_wantedPitch = 330.0;
	l_zombieRadius = 200.0;
	l_statueRadius = 200.0;

	l_start = OverlayElement_GetByName( "Start/Number");
	l_scoreInGame = OverlayElement_GetByName( "Score/Text");
	l_chronoInGame = OverlayElement_GetByName( "TopRight/Chrono");

	l_rootNode = SceneNode_GetByName( "root node");
	l_charNode = SceneNode_GetByName( "PersoNode");
	l_rootCamera = Camera_GetByName( "RootCamera");


	l_rootCamera->GetParent()->Pitch( l_currentPitch);

	l_charAnims = AnimationGroup_GetByName( "Perso");
	l_zombiesAnims = AnimationGroup_GetByName( "Zombies");

	l_animName = "ouverture";
	l_charAnims->StartAnimation( "ouverture");
	l_charAnims->PauseAnimation( "ouverture");

	Overlay_Hide( "Commandes");
	Overlay_Hide( "Options");
	Overlay_Hide( "Regles");
	Overlay_Hide( "Start");
	Overlay_Hide( "Scores");
	Overlay_Hide( "Score");
	Overlay_Hide( "MenuInGame");
	Overlay_Hide( "TopRight");
	OverlayElement_GetByName( "Menu/Recommencer")->Hide();
	OverlayElement_GetByName( "Menu/Continuer")->Hide();

	l_ticPos = 1.0;
	l_ticMusic = OverlayElement_GetByName( "Options/TicMusic");
	l_ticSound = OverlayElement_GetByName( "Options/TicSound");
	l_relativeRegletteWidth = OverlayElement_GetByName( "Options/RegletteMusic")->GetWidth() - l_ticMusic->GetWidth();
	l_relativeTicWidth = l_ticMusic->GetWidth() / GENERAL_SCREEN_WIDTH;
};