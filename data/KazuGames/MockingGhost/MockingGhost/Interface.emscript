Overlay_SetAction( "Menu/Jouer")
{
	BeginGame();
};

Overlay_SetAction( "Menu/Continuer")
{
	ContinueGame();
};

Overlay_SetAction( "Menu/Recommencer")
{
	KazuPlayGame();
	if (l_infos == "ok" || g_fucked || l_infos == "tech error")
	{
		StopGame();
		BeginGame();
		OverlayElement_GetByName( "Menu/Recommencer")->Hide();
		OverlayElement_GetByName( "Menu/Recommencer/Cout")->Hide();
		OverlayElement_GetByName( "Menu/Continuer")->Show();
	};
};

Overlay_SetAction( "MenuInGame")
{
	PauseGame();
};

void ShowTitle()
{
	if (l_titleShown)
	{
		Overlay_Show( "Title");
	};
};

void HideTitle()
{
	if (l_titleShown)
	{
		Overlay_Hide( "Title");
	};
};

Overlay_SetAction( "Menu/Regles")
{
	Overlay_Hide( "Menu");
	Overlay_Show( "Regles");
	HideTitle();
};

Overlay_SetAction( "Menu/Commandes")
{
	Overlay_Hide( "Menu");
	Overlay_Show( "Commandes");
	HideTitle();
};

Overlay_SetAction( "Menu/Options")
{
	Overlay_Hide( "Menu");
	Overlay_Show( "Options");
	HideTitle();
};

Overlay_SetAction( "Menu/Scores")
{
	_retrieveHighScores();
	Overlay_Hide( "Menu");
	Overlay_Show( "Scores");
	HideTitle();
};

Overlay_SetAction( "Scores/Retour")
{
	Overlay_Show( "Menu");
	Overlay_Hide( "Scores");
	ShowTitle();
};

Overlay_SetAction( "Commandes/Retour")
{
	Overlay_Hide( "Commandes");
	Overlay_Show( "Menu");
	ShowTitle();
};

Overlay_SetAction( "Regles/Retour")
{
	Overlay_Hide( "Regles");
	Overlay_Show( "Menu");
	ShowTitle();
};

Overlay_SetAction( "Options/Retour")
{
	Overlay_Hide( "Options");
	Overlay_Show( "Menu");
	ShowTitle();
};

Overlay_SetAction( "Options/MusicOnOff")
{
	l_music = ( ! l_music);
	Sound_MuteMusic( l_music);

	if ( ! l_music)
	{
		OverlayElement_GetByName( "Options/MusicOnOff")->SetMaterial( "On");
	}
	else
	{
		OverlayElement_GetByName( "Options/MusicOnOff")->SetMaterial( "Off");
	};
};

Overlay_SetAction( "Options/SoundOnOff")
{
	l_sound = ( ! l_sound);
	Sound_MuteSFX( l_sound);

	if ( ! l_sound)
	{
		OverlayElement_GetByName( "Options/SoundOnOff")->SetMaterial( "On");
	}
	else
	{
		OverlayElement_GetByName( "Options/SoundOnOff")->SetMaterial( "Off");
	};
};

void TimerMusic()
{
	timer( "MusicChangeVolume", TIMERTYPE_PERMANENT, 0.0)
	{
		l_ticPos = MOUSE_POSITION_X - l_ticMusic->GetAbsoluteLeft();
		l_ticMusic->Translate( l_ticPos, 0.0);

		l_ticMusic->LimitToParent();

		l_musicVol = l_ticMusic->GetLeft() / l_relativeRegletteWidth;

		Echo( rtoa( l_musicVol));
		Sound_SetMusicVolume( l_musicVol);
	};
};

void TimerSound()
{
	timer( "SoundChangeVolume", TIMERTYPE_PERMANENT, 0.0)
	{
		l_ticPos = MOUSE_POSITION_X - l_ticSound->GetAbsoluteLeft();
		l_ticSound->Translate( l_ticPos, 0.0);

		l_ticSound->LimitToParent();

		l_soundVol = l_ticSound->GetLeft() / l_relativeRegletteWidth;

		Echo( rtoa( l_soundVol));
		Sound_SetSFXVolume( l_soundVol);
	};
};

Overlay_SetAction( "Options/RegletteMusic")
{
	TimerMusic();
};

Overlay_SetAction( "Options/TicMusic")
{
	TimerMusic();
};

Overlay_SetAction( "Options/RegletteSound")
{
	TimerSound();
};

Overlay_SetAction( "Options/TicSound")
{
	TimerSound();
};

SetMouseLUpScript()
{
	Timer_Kill( "SoundChangeVolume");
	Timer_Kill( "MusicChangeVolume");
	if ( l_inGame && l_gameStarted && l_melted && ! l_selected)
	{
		ChooseBox();
	};
};
